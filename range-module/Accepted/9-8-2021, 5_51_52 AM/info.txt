{"id":551194252,"lang":"cpp","time":"6 months, 1 week","timestamp":1631059612,"status_display":"Accepted","runtime":"204 ms","url":"/submissions/detail/551194252/","is_pending":"Not Pending","title":"Range Module","memory":"71.8 MB","code":"class RangeModule {\npublic: map<int,int>mp;\n    RangeModule() {\n        mp.clear();\n    }\n    \n    void addRange(int left, int right) {\n        if(mp.empty()){\n            mp[right]=left;return;\n        }\n        auto it=mp.lower_bound(left),nxt=it;\n        while(nxt!=mp.end() && nxt->second<=right){\n            left=min(left,nxt->second);\n            right=max(right,nxt->first);\n            nxt++;\n        }\n        mp.erase(it,nxt);\n        mp[right]=left;\n    }\n    \n    bool queryRange(int left, int right) {        \n        if(mp.empty())return false;\n        auto it=mp.lower_bound(left);\n        if(it==mp.end()) return false;\n        return it->second<=left && it->first>= right;\n    }\n    \n    void removeRange(int left, int right) {\n        if(mp.empty())return;\n        auto it=mp.lower_bound(left),nxt=it;\n        if(it==mp.end()) return;\n        vector<pair<int,int>> dRanges;\n        while(nxt!=mp.end() && nxt->second<right){\n            if(nxt->second<left)dRanges.push_back({nxt->second,left});\n            if(nxt->first>right)dRanges.push_back({right,nxt->first});\n            nxt++;\n        }\n        mp.erase(it,nxt);\n        for(auto& i:dRanges)mp[i.second]=i.first;\n    }\n};\n\n/**\n * Your RangeModule object will be instantiated and called as such:\n * RangeModule* obj = new RangeModule();\n * obj->addRange(left,right);\n * bool param_2 = obj->queryRange(left,right);\n * obj->removeRange(left,right);\n */","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"range-module"}