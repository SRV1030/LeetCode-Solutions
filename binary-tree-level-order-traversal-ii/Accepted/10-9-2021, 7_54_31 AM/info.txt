{"id":568096257,"lang":"cpp","time":"5Â months","timestamp":1633745371,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/568096257/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal II","memory":"13.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic: unordered_map<int,vector<int>>mp;\n    void trav(int l,TreeNode* root){\n        if(!root) return;\n        mp[l].push_back(root->val);\n        trav(l+1,root->left);\n        trav(l+1,root->right);\n    }\n    vector<vector<int>> levelOrderBottom(TreeNode* root) {\n        if(!root) return{};\n        trav(1,root);\n        vector<vector<int>> ans;\n        for(int i=mp.size();i>=1;i--) ans.push_back(mp[i]);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal-ii"}