{"id":512539976,"lang":"cpp","time":"8 months, 3 weeks","timestamp":1624538011,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/512539976/","is_pending":"Not Pending","title":"Construct Binary Tree from Preorder and Inorder Traversal","memory":"25.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:int preInd=0;\n    int search( vector<int>& in,int s,int e,int k){\n        if(s>e) return -1;\n        for(int i=s;i<=e;i++)\n            if(in[i]==k) return i; \n        return -1;\n    }\n    TreeNode* util(vector<int>& preorder, vector<int>& inorder,int s,int e){\n        if(s>e) return NULL;\n         TreeNode* root=new TreeNode(preorder[preInd++]);\n        int i=search(inorder,s,e,root->val);\n        if(i!=-1){\n            root->left=util(preorder,inorder,s,i-1);\n            root->right=util(preorder,inorder,i+1,e);\n        }\n        return root;\n        \n    }\n    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {\n       TreeNode* root=util(preorder,inorder,0,preorder.size()-1);\n       return root;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-binary-tree-from-preorder-and-inorder-traversal"}