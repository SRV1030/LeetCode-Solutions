{"id":617353717,"lang":"cpp","time":"2Â months","timestamp":1641871154,"status_display":"Accepted","runtime":"478 ms","url":"/submissions/detail/617353717/","is_pending":"Not Pending","title":"Find All Possible Recipes from Given Supplies","memory":"117.4 MB","code":"class Solution {\npublic:\n    \n   unordered_map<string,vector<string>>mp;\n   unordered_map<string,int>vis;\n   bool dfs(string i){\n       if(vis[i]==3)return true;\n       if(vis[i]==2 || !mp.count(i)) return false;\n       bool exs=true;\n       vis[i]=1;\n       for(auto&j:mp[i]){\n           if(vis[j]==1 || vis[j]==2){\n               vis[i]=vis[j]=2;\n               return false;\n           }\n           else exs&=dfs(j);\n       }\n       if(exs) vis[i]=3;\n       else vis[i]=2;\n       return exs;\n   } \n    vector<string> findAllRecipes(vector<string>& recipes, vector<vector<string>>& ingredients, vector<string>& supplies) {\n        vector<string> ans;\n        for(auto&i:supplies)vis[i]=3;\n        for(int i=0;i<recipes.size();i++) mp[recipes[i]]=ingredients[i];\n        for(auto&i:recipes)if(dfs(i)) ans.push_back(i);\n        return ans;       \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-all-possible-recipes-from-given-supplies"}