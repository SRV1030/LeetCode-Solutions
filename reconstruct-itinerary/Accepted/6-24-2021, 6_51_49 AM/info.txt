{"id":512316696,"lang":"cpp","time":"8 months, 3 weeks","timestamp":1624496809,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/512316696/","is_pending":"Not Pending","title":"Reconstruct Itinerary","memory":"16.8 MB","code":"class Solution {\npublic:\n    int n;\n    map<string,set<string>>mp;\n    map<string,int>vis;  \n    vector<string>iten;\n    void dfs(string cur,set<string> &places,vector<string> &ans,int trips,bool &f){\n        if(trips==n){\n            f=true;\n            iten=ans;  \n            return;\n        } \n        for(auto i:places){\n            string key=cur+i;\n            if(vis[key]>0){\n                vis[key]--;\n                ans.push_back(i);\n                if(!f)dfs(i,mp[i],ans,trips+1,f);\n                vis[key]++;\n                ans.pop_back();\n            }\n        }\n    }\n    \n    vector<string> findItinerary(vector<vector<string>>& tickets) {        \n        n=tickets.size();\n        for(auto i:tickets){\n            mp[i[0]].insert(i[1]);\n            string tour=i[0]+i[1];\n            vis[tour]++;\n        }\n        vector<string>ans;\n        ans.push_back(\"JFK\");\n        int k=0;\n        bool f=false;\n        dfs(ans[0],mp[ans[0]],ans,k,f);\n         return iten;      \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reconstruct-itinerary"}