{"id":550106035,"lang":"cpp","time":"6 months, 1 week","timestamp":1630887478,"status_display":"Accepted","runtime":"1272 ms","url":"/submissions/detail/550106035/","is_pending":"Not Pending","title":"Word Ladder II","memory":"428.4 MB","code":"class Solution {\npublic: vector<vector<string>> ans;\n    void dfs(string beginWord,string endWord,unordered_map<string,set<string>> adj,vector<string> a){\n        a.push_back(beginWord);\n        if(beginWord==endWord){\n            ans.push_back(a);\n            return;\n        }\n        for(auto & x:adj[beginWord]) dfs(x,endWord,adj,a);\n    }\n    vector<vector<string>> findLadders(string beginWord, string endWord, vector<string>& wordList) {\n        unordered_set<string>dict(wordList.begin(),wordList.end());\n        if(!dict.count(endWord)) return {};\n        unordered_map<string,int>vis;\n        unordered_map<string,set<string>>adj;\n        queue<string>q;\n        q.push(beginWord);\n        vis[beginWord]=0;\n        while(!q.empty()){\n            string cur=q.front(),t=cur;\n            q.pop();\n            for(int i=0;i<t.size();i++){\n                char x=t[i];\n                for(char c='a';c<='z';c++){\n                    if(t[i]==c) continue;\n                    t[i]=c;\n                    if(dict.count(t)){\n                        if(!vis.count(t)){\n                            vis[t]=vis[cur]+1;\n                            q.push(t);\n                            adj[cur].insert(t);\n                        }\n                        else if(vis[t]==vis[cur]+1) adj[cur].insert(t);\n                    }\n                }\n                t[i]=x;\n            }            \n        }\n        dfs(beginWord,endWord,adj,{});\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"word-ladder-ii"}