{"id":590752163,"lang":"cpp","time":"3 months, 3 weeks","timestamp":1637546657,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/590752163/","is_pending":"Not Pending","title":"Maximum Difference Between Node and Ancestor","memory":"9.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int util(TreeNode* root,int mx,int mn){\n        if(!root) return mx-mn;\n        if(root->val>mx)mx=root->val;\n        if(root->val<mn)mn=root->val;\n        return max(util(root->left,mx,mn),util(root->right,mx,mn));\n        \n    }\n    int maxAncestorDiff(TreeNode* root) {\n        if(!root) return 0;        \n        return util(root,root->val,root->val);\n    }\n};","compare_result":"111111111111111111111111111","title_slug":"maximum-difference-between-node-and-ancestor"}