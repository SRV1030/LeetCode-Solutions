{"id":596178677,"lang":"cpp","time":"3 months, 1 week","timestamp":1638498154,"status_display":"Accepted","runtime":"96 ms","url":"/submissions/detail/596178677/","is_pending":"Not Pending","title":"Sum of Subarray Minimums","memory":"43.1 MB","code":"class Solution {\npublic:\n    long long MOD=1e9+7;\n    int sumSubarrayMins(vector<int>& arr) {\n        stack<int>st;\n        vector<int>l(arr.size(),-1),r(arr.size(),arr.size());\n        for(int i=0;i<arr.size();i++){\n            while(!st.empty() && arr[i]<arr[st.top()])st.pop();\n            if(st.empty()) l[i]=i+1;\n            else l[i]=i-st.top();\n            st.push(i);\n        }\n        st=stack<int>();\n        for(int i=arr.size()-1;i>=0;i--){\n            while(!st.empty() && arr[i]<=arr[st.top()])st.pop();\n            if(st.empty()) r[i]=arr.size()-i;\n            else r[i]=st.top()-i;\n            st.push(i);\n        }\n        int res = 0;\n        for(int i=0; i<arr.size(); i++){\n            long long prod = (l[i]*r[i])%MOD;\n            prod = (prod*arr[i])%MOD;\n            res = (res + prod)%MOD;\n        }        \n        return res%MOD;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-subarray-minimums"}