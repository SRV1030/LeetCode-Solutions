{"id":592255239,"lang":"cpp","time":"3 months, 2 weeks","timestamp":1637804525,"status_display":"Accepted","runtime":"228 ms","url":"/submissions/detail/592255239/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"144.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void depth(TreeNode* root,int dep,int &ans)\n    {\n        if(!root) return;\n        if(!root->left and !root->right)\n        {\n            ans = min(dep,ans);\n            return;\n        }\n        depth(root->left,dep+1,ans);\n        depth(root->right,dep+1,ans);\n    }\n    int minDepth(TreeNode* root) {\n        if(!root) return 0;\n        int ans=INT_MAX;\n        depth(root,1,ans);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree"}