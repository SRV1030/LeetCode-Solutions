{"id":538808023,"lang":"cpp","time":"7Â months","timestamp":1629018917,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/538808023/","is_pending":"Not Pending","title":"Binary Tree Coloring Game","memory":"10.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int count(TreeNode* root){\n        if(!root) return 0;\n        return 1+count(root->left)+count(root->right);\n    }\n    bool btreeGameWinningMove(TreeNode* root, int n, int x) {\n        queue<TreeNode*>q;\n        q.push(root);\n        TreeNode* trg;\n        while(!q.empty()){\n            TreeNode* t=q.front();\n            q.pop();\n            if(t->val==x){\n                trg=t;\n                break;\n            }\n            if(t->left)q.push(t->left);\n            if(t->right)q.push(t->right);\n        }\n        int lft=count(trg->left),rt=count(trg->right);\n        if(lft+rt+1<=n/2)return true;\n        if(lft>n/2 || rt>n/2)return true;\n        return false;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-coloring-game"}