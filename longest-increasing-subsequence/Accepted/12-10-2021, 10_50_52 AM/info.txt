{"id":599661594,"lang":"cpp","time":"3Â months","timestamp":1639112752,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/599661594/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"10.3 MB","code":"class Solution {\npublic:\n    int uBound(int v[],int l,int h,int k){\n        while(l<h){\n            int m=l+(h-l)/2;\n            if(v[m]<k) l=m+1;\n            else h=m;            \n        }\n        return h;\n    }\n    int lengthOfLIS(vector<int>& a) {\n        int l=1,n=a.size();\n        int dp[n];\n        dp[0]=a[0];\n        for(int i=1;i<n;i++){\n            if(a[i]>dp[l-1])dp[l++]=a[i];\n            else{\n                int x=uBound(dp,0,l-1,a[i]);\n                dp[x]=a[i];\n                // cout<<i<<\" \"<<a[i]<<\" \"<<x<<\"\\n\";\n            }\n        }\n        return l;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence"}