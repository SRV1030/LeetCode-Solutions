{"id":519543164,"lang":"cpp","time":"8 months, 1 week","timestamp":1625792218,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/519543164/","is_pending":"Not Pending","title":"Remove Duplicates from Sorted List II","memory":"11.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteDuplicates(ListNode* head) {\n      if(!head) return head;\n      ListNode*ans= new ListNode(0,head),*p=ans;\n      while(p && p->next){              \n            while(p->next && p->next->next && p->next->val==p->next->next->val){\n               int v=p->next->val;\n                while(p->next && p->next->val==v)p->next=p->next->next;\n            }\n          \n        p=p->next;\n      }\n      p=ans->next;\n        delete ans;\n      return p;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-duplicates-from-sorted-list-ii"}