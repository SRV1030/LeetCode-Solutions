{"id":643721513,"lang":"cpp","time":"3 weeks, 2 days","timestamp":1645163373,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/643721513/","is_pending":"Not Pending","title":"Number of Provinces","memory":"13.8 MB","code":"class Solution {\npublic:\n    int n;\n    vector<int> parent;\n    int get_parent(int i){\n        if(i==parent[i]) return i;\n        return parent[i]=get_parent(parent[i]);\n    }\n    void get_union(int i,int j){\n        parent[get_parent(i)]=get_parent(j);\n    }\n    int findCircleNum(vector<vector<int>>& isCon) {\n        n=isCon.size();\n        for(int i=0;i<n;parent.emplace_back(i++));\n        for(int i=0;i<n;i++)\n            for(int j=i+1;j<n;j++) if(isCon[i][j]) get_union(i,j);\n        unordered_set<int>st;\n        for(auto&i:parent)st.insert(get_parent(i));\n        return st.size();\n    }\n};\n\n// class Solution {\n// public:\n//     int n;\n//     void dfs(vector<vector<int>>& isCon,int i){\n//         isCon[i][i]=2;\n//         for(int j=0;j<n;j++)\n//             if(isCon[j][j]==1 && isCon[i][j]==1)dfs(isCon,j);\n//     }\n//     int findCircleNum(vector<vector<int>>& isCon) {\n//         n=isCon.size();\n//         int c=0;\n//         for(int i=0;i<n;i++){\n//             if(isCon[i][i]==1){\n//                 dfs(isCon,i);\n//                 c++;\n//             }\n//         }\n//         return c;\n//     }\n// };","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-provinces"}