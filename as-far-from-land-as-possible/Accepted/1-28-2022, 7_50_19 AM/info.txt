{"id":629299062,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1643335519,"status_display":"Accepted","runtime":"134 ms","url":"/submissions/detail/629299062/","is_pending":"Not Pending","title":"As Far from Land as Possible","memory":"27.3 MB","code":"class Solution {\npublic:\n     int maxDistance(vector<vector<int>>& g, int steps = 0) {\n  queue<pair<int, int>> q, q1;\n  for (auto i = 0; i < g.size(); ++i)\n    for (auto j = 0; j < g[i].size(); ++j)\n      if (g[i][j] == 1)\n        q.push({ i - 1, j }), q.push({ i + 1, j }), q.push({ i, j - 1 }), q.push({ i, j + 1 });\n  while (!q.empty()) {\n    ++steps;\n    while (!q.empty()) {\n      int i = q.front().first, j = q.front().second;\n      q.pop();\n      if (i >= 0 && j >= 0 && i < g.size() && j < g[i].size() && g[i][j] == 0) {\n        g[i][j] = steps;\n        q1.push({ i - 1, j }), q1.push({ i + 1, j }), q1.push({ i, j - 1 }), q1.push({ i, j + 1 });\n      }\n    }\n    swap(q1, q);\n  }\n  return steps == 1 ? -1 : steps - 1;\n}\n};","compare_result":"11111111111111111111111111111111111","title_slug":"as-far-from-land-as-possible"}