{"id":629298349,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1643335408,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/629298349/","is_pending":"Not Pending","title":"As Far from Land as Possible","memory":"N/A","code":"class Solution {\npublic:\n    int mx=-1;\n    void dfs(vector<vector<int>>& g, int i, int j, int dist = 1) {\n  if (i < 0 || j < 0 || i >= g.size() || j >= g[i].size() || (g[i][j] != 0 && g[i][j] <= dist)) return;\n  g[i][j] = dist;\n  dfs(g, i - 1, j, dist + 1), dfs(g, i + 1, j, dist + 1), dfs(g, i, j - 1, dist + 1), dfs(g, i, j + 1, dist + 1);\n}\nint maxDistance(vector<vector<int>>& g, int mx = -1) {\n  for (auto i = 0; i < g.size(); ++i)\n    for (auto j = 0; j < g[i].size(); ++j)\n      if (g[i][j] == 1) {\n          g[i][j] = 0;\n          dfs(g, i, j);\n      }\n  for (auto i = 0; i < g.size(); ++i)\n    for (auto j = 0; j < g[i].size(); ++j)\n      if (g[i][j] > 1) mx = max(mx, g[i][j] - 1);\n  return mx;\n}\n};","compare_result":"11111111111111111111111111111111110","title_slug":"as-far-from-land-as-possible"}