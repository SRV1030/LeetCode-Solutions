{"id":530485770,"lang":"cpp","time":"7 months, 2 weeks","timestamp":1627625078,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/530485770/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        ListNode* add=new ListNode(),*head=add;\n        int c=0;\n        while(l1 && l2){\n            int s=l1->val+l2->val+c;\n            if(s>=9){\n                add->next=new ListNode(s%10);\n                c=1;\n            }else{\n                add->next=new ListNode(s);\n                c=0;\n            }\n            l1=l1->next;\n            l2=l2->next;\n            add=add->next;\n        }\n        while(l1){\n            int s=l1->val+c;\n            if(s>=9){\n                add->next=new ListNode(s%10);\n                c=1;\n            }else{\n                add->next=new ListNode(s);\n                c=0;\n            }\n            l1=l1->next;\n            add=add->next;\n        }\n        while(l2){\n            int s=l2->val+c;\n            if(s>=9){\n                add->next=new ListNode(s%10);\n                c=1;\n            }else{\n                add->next=new ListNode(s);\n                c=0;\n            }\n            l2=l2->next;\n            add=add->next;\n        }\n        if(c){\n            add->next=new ListNode(1);\n            add=add->next;\n        }\n        return head->next;\n    }\n};","compare_resulttitle_slug":"add-two-numbers"}