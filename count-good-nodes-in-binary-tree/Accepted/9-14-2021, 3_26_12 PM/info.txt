{"id":554712619,"lang":"cpp","time":"6Â months","timestamp":1631612472,"status_display":"Accepted","runtime":"120 ms","url":"/submissions/detail/554712619/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"86.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic: int ans=0;\n    void util(TreeNode* root,int mx){\n        if(!root) return;\n        if(root->val>=mx){\n            ans++;\n            mx=root->val;\n        }\n        util(root->left,mx);\n        util(root->right,mx);\n    }\n    int goodNodes(TreeNode* root) {\n        int mx=root->val;\n        util(root,mx);\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-good-nodes-in-binary-tree"}