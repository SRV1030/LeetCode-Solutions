{"id":506708945,"lang":"cpp","time":"9Â months","timestamp":1623487475,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/506708945/","is_pending":"Not Pending","title":"Min Stack","memory":"16.4 MB","code":"class MinStack {\npublic: stack<pair<int,int>>st;\n    /** initialize your data structure here. */\n    MinStack() {\n    \n    }\n    \n    void push(int val) {\n        if(st.empty()) st.push({val,val});\n        else st.push({val,min(val,st.top().second)});\n    }\n    \n    void pop() {\n        if(st.empty()) return;\n        st.pop();        \n    }\n    \n    int top() {\n        if(st.empty()) return NULL;\n        return st.top().first;\n    }\n    \n    int getMin() {\n        if(st.empty()) return NULL;\n        return st.top().second;\n    }\n};\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * MinStack* obj = new MinStack();\n * obj->push(val);\n * obj->pop();\n * int param_3 = obj->top();\n * int param_4 = obj->getMin();\n */","compare_result":"1111111111111111111111111111111","title_slug":"min-stack"}