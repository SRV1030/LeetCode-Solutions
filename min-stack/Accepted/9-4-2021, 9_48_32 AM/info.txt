{"id":549162391,"lang":"cpp","time":"6 months, 1 week","timestamp":1630728212,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/549162391/","is_pending":"Not Pending","title":"Min Stack","memory":"16.3 MB","code":"class MinStack {\npublic: \n    stack<long long int>st;\n    long long int mn=-1;\n    /** initialize your data structure here. */\n    MinStack() {\n        \n    }\n    \n    void push(long long int val) {\n        if(st.empty()){\n            st.push(val);\n            mn=val;\n            return;\n        }else{\n            if(val>=mn) st.push(val);\n            else{\n                st.push(2*val-mn);\n                mn=val;\n            }\n        }\n    }\n    \n    void pop() {\n        if(st.empty())return;\n        if(st.top()>=mn) st.pop();\n        else{\n            mn=2*mn-st.top();\n            st.pop();\n        }\n        \n    }\n    \n    int top() {\n        if(st.empty()) return -1;\n        if(st.top()>=mn) return st.top();\n        else return mn;\n    }\n    \n    int getMin() {\n        if(st.empty()) return -1;\n        return mn;\n    }\n};\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * MinStack* obj = new MinStack();\n * obj->push(val);\n * obj->pop();\n * int param_3 = obj->top();\n * int param_4 = obj->getMin();\n */","compare_result":"1111111111111111111111111111111","title_slug":"min-stack"}