{"id":544267153,"lang":"cpp","time":"6 months, 2 weeks","timestamp":1629938404,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/544267153/","is_pending":"Not Pending","title":"Min Stack","memory":"N/A","code":"class MinStack {\npublic: int mn;\n    stack<int>st;\n    /** initialize your data structure here. */\n    MinStack() {\n        \n    }\n    \n    void push(int val) {\n        if(st.empty()){\n            mn=val;\n            st.push(val);\n            return;\n        }\n        if(val>=mn)st.push(val);\n        else{\n            st.push(2*val-mn);\n            mn=val;\n        }\n    }\n    \n    void pop() {\n        if(st.empty())return;\n        if(st.top()>mn)st.pop();\n        else{\n            mn=2*mn-st.top();\n            st.pop();\n        }\n    }\n    \n    int top() {\n        if(st.empty()) return -1;\n        if(st.top()>mn) return st.top();\n        return mn;\n    }\n    \n    int getMin() {\n        if(st.empty()) return -1;\n        return mn;\n    }\n};\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * MinStack* obj = new MinStack();\n * obj->push(val);\n * obj->pop();\n * int param_3 = obj->top();\n * int param_4 = obj->getMin();\n */","compare_result":"1111111110000000000000000000000","title_slug":"min-stack"}