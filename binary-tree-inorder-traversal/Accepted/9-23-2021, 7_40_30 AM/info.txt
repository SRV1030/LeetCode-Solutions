{"id":559473087,"lang":"cpp","time":"5 months, 3 weeks","timestamp":1632362130,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/559473087/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"8.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode* root) {\n        vector<int> v;\n       TreeNode*cur=root;\n        while(cur){\n            if(!cur->left){\n                v.push_back(cur->val);\n                cur=cur->right;\n            }\n            else{\n               TreeNode* pred=cur->left;\n                while(pred->right && cur!=pred->right) pred=pred->right;\n                if(!pred->right){\n                    pred->right=cur;\n                    cur=cur->left;\n                }\n                else{\n                    pred->right=NULL;\n                    v.push_back(cur->val);\n                    cur=cur->right;                    \n                }\n            }\n        }\n        return v;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal"}