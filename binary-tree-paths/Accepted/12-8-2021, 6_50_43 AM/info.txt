{"id":598590890,"lang":"cpp","time":"3Â months","timestamp":1638925543,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/598590890/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"13.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<string> ans;\n    void fill(TreeNode* root,string a){\n        if(!root) return;\n        if(!root->left && !root->right){\n            a+=to_string(root->val);\n            ans.push_back(a);\n            return;\n        }\n        string s=to_string(root->val)+\"->\";\n        fill(root->left,a+s);\n        fill(root->right,a+s);\n        \n    }\n    vector<string> binaryTreePaths(TreeNode* root) {\n        if(!root) {};\n        string s=to_string(root->val);\n        if(!root->left && !root->right)return {s};\n        s+=\"->\";\n        fill(root->left,s);\n        fill(root->right,s);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-paths"}