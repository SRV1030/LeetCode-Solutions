{"id":551239979,"lang":"cpp","time":"6 months, 1 week","timestamp":1631067704,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/551239979/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"12.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic: TreeNode* prev=NULL;\n    void flatten(TreeNode* root) {\n       if(!root) return;\n       flatten(root->right);\n       flatten(root->left);\n       root->right=prev;\n       root->left=NULL;           \n       prev=root;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list"}