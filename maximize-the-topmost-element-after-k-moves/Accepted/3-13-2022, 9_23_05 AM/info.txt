{"id":658854913,"lang":"cpp","time":"23 hours, 5 minutes","timestamp":1647142685,"status_display":"Accepted","runtime":"155 ms","url":"/submissions/detail/658854913/","is_pending":"Not Pending","title":"Maximize the Topmost Element After K Moves","memory":"63.4 MB","code":"class Solution {\npublic:\n    int maximumTop(vector<int>& nums, int k) {\n        int n=nums.size();\n        if(k==0)return nums[0];\n        if(n==1)return k%2==1?-1:nums[0];\n        if(k%2==1){\n            int mx=-1;\n            if(n<k)return *max_element(nums.begin(),nums.end());\n            else if(n==k){\n                for(int i=0;i<k-1;i++){\n                    mx=max(mx,nums[i]);\n                }\n                return mx;\n            }else{\n                for(int i=0;i<k-1;i++){\n                    mx=max(mx,nums[i]);\n                }\n                return max(mx,nums[k]);\n            }\n        }else{\n            int mx=-1;\n            if(n<k)return *max_element(nums.begin(),nums.end());\n            else if(n==k){\n                for(int i=0;i<k-1;i++){\n                    mx=max(mx,nums[i]);\n                }\n                return mx;\n            }else{\n                for(int i=0;i<k-1;i++){\n                    mx=max(mx,nums[i]);\n                }\n                return max(mx,nums[k]);\n            }\n        }\n        return -1;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximize-the-topmost-element-after-k-moves"}