{"id":518201645,"lang":"cpp","time":"8 months, 1 week","timestamp":1625568038,"status_display":"Accepted","runtime":"92 ms","url":"/submissions/detail/518201645/","is_pending":"Not Pending","title":"Shuffle an Array","memory":"90.3 MB","code":"class Solution {\npublic:vector<int> og,shuf;\n    Solution(vector<int>& nums) {\n        og=nums;\n        shuf=nums;\n    }\n    \n    /** Resets the array to its original configuration and return it. */\n    vector<int> reset() {\n        shuf=og;\n        return shuf;\n    }\n    \n    /** Returns a random shuffling of the array. */\n    vector<int> shuffle() {\n        int n=shuf.size();\n        int ls=n;\n        for(int i=n-1;i>=0;i--){\n            int x=rand()%ls;\n            swap(shuf[i],shuf[x]);\n            ls--;\n        }\n        return shuf;\n    }\n};\n\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution* obj = new Solution(nums);\n * vector<int> param_1 = obj->reset();\n * vector<int> param_2 = obj->shuffle();\n */","compare_result":"1111111111","title_slug":"shuffle-an-array"}