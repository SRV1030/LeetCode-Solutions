{"id":639165433,"lang":"cpp","time":"1Â month","timestamp":1644567345,"status_display":"Accepted","runtime":"813 ms","url":"/submissions/detail/639165433/","is_pending":"Not Pending","title":"Single-Threaded CPU","memory":"129.6 MB","code":"class Solution {\npublic:\n    vector<int> getOrder(vector<vector<int>>& tasks) {\n        int n=tasks.size();\n        for(int i=0;i<n;i++)tasks[i].emplace_back(i);\n        sort(tasks.begin(),tasks.end());\n        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>pq;\n        int t=tasks[0][0],p=0;\n        vector<int>ans;\n        while(p<n){\n            while(p<n && tasks[p][0]<=t){\n                pq.push({tasks[p][1],tasks[p][2]});\n                p++;\n            }\n            if(pq.empty()){\n                t=tasks[p][0];\n                continue;                \n            }\n            pair<int,int>v=pq.top();\n            pq.pop();\n            t+=v.first;\n            ans.emplace_back(v.second);\n        }\n        while(!pq.empty()){\n            pair<int,int>v=pq.top();\n            pq.pop();\n            ans.emplace_back(v.second);\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"single-threaded-cpu"}