{"id":544405804,"lang":"cpp","time":"6 months, 2 weeks","timestamp":1629957526,"status_display":"Accepted","runtime":"87 ms","url":"/submissions/detail/544405804/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"23.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        if(!root) return NULL;\n        if(root->val<p->val && root->val<q->val) return lowestCommonAncestor(root->right,p,q);\n        if(root->val>p->val && root->val>q->val) return lowestCommonAncestor(root->left,p,q);\n        return root;\n    }\n};","compare_result":"111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-search-tree"}