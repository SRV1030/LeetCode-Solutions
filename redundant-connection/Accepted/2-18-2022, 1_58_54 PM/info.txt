{"id":643799070,"lang":"cpp","time":"3 weeks, 2 days","timestamp":1645172034,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/643799070/","is_pending":"Not Pending","title":"Redundant Connection","memory":"8.9 MB","code":"class Solution {\npublic:\n    vector<int>parent;\n    int get_parent(int i){\n        if(i==parent[i]) return i;\n        return parent[i]=get_parent(parent[i]);\n    }\n    void get_union(int i,int j){\n        parent[get_parent(i)]=get_parent(j);\n    }\n    vector<int> findRedundantConnection(vector<vector<int>>& edges) {\n        int n=edges.size();\n        for(int i=0;i<=n;parent.emplace_back(i++));\n        for(auto&e:edges){\n            if(get_parent(e[0])==get_parent(e[1])) return e;\n            get_union(e[0],e[1]);\n        }\n        return {};\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"redundant-connection"}