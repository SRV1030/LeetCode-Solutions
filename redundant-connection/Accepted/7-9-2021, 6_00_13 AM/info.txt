{"id":519531924,"lang":"cpp","time":"8 months, 1 week","timestamp":1625789713,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/519531924/","is_pending":"Not Pending","title":"Redundant Connection","memory":"10.2 MB","code":"class Solution {\npublic:\n    bool dfs(vector<vector<int>>& g, vector<int> &vis,int src,int trg,int p){\n        if(src==trg) return true;\n        vis[src]=true;\n        for(auto i:g[src]){\n            if(src==p && i==trg) continue;\n            if(!vis[i])\n                if(dfs(g,vis,i,trg,src))\n                    return true;\n        }\n        return false;\n    }\n    vector<int> findRedundantConnection(vector<vector<int>>& e) {\n        vector<vector<int>>g(e.size()+1);\n        for(auto i:e){\n            g[i[0]].push_back(i[1]);\n            g[i[1]].push_back(i[0]);\n        }\n        for(int i=e.size()-1;i>=0;i--){\n            vector<int>vis(e.size()+1,0);\n            if(dfs(g,vis,e[i][0],e[i][1],e[i][0]))\n                return e[i];\n        }\n        return {};\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"redundant-connection"}