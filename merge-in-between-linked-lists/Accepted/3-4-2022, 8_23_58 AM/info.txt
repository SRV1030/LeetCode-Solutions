{"id":652943869,"lang":"cpp","time":"1Â week, 3Â days","timestamp":1646361538,"status_display":"Accepted","runtime":"344 ms","url":"/submissions/detail/652943869/","is_pending":"Not Pending","title":"Merge In Between Linked Lists","memory":"95.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeInBetween(ListNode* list1, int a, int b, ListNode* list2) {\n        ListNode* c1=list1, *e1=list1,*c2=list2;\n        b-=(a-1);\n        a-=1;\n        while(c1 && a--){\n            c1=c1->next;\n        } \n        if(!c1) return list2;\n        e1=c1->next;\n        while(e1 && b--){\n            ListNode* del=e1;\n            e1=e1->next;\n            delete del;\n        }\n        c1->next=list2;\n        while(c2->next)c2=c2->next;\n        c2->next=e1;\n        return list1;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-in-between-linked-lists"}