{"id":587822507,"lang":"cpp","time":"3 months, 4 weeks","timestamp":1637028243,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/587822507/","is_pending":"Not Pending","title":"Largest Divisible Subset","memory":"8.6 MB","code":"class Solution {\npublic:\n    vector<int> largestDivisibleSubset(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        int n=nums.size();\n        int t[n],mx=1;\n        t[0]=1;\n        for(int i=1;i<n;i++){\n            t[i]=1;\n            for(int j=0;j<i;j++)\n                if(nums[i]%nums[j]==0 && t[i]<1+t[j]){\n                    t[i]=1+t[j];                    \n                }\n            if(t[i]>mx)mx=t[i];\n        }\n        vector<int> v;\n        int i,prv=-1;\n        for(i=n-1;i>=0;i--){\n            if(t[i]==mx && (prv==-1 || prv%nums[i]==0)){\n                v.push_back(nums[i]);\n                prv=nums[i];\n                mx--;\n            }  \n        }\n        return v;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"largest-divisible-subset"}