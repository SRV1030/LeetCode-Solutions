{"id":580734824,"lang":"cpp","time":"4 months, 1 week","timestamp":1635818542,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/580734824/","is_pending":"Not Pending","title":"Unique Paths III","memory":"6.9 MB","code":"class Solution {\npublic:\n    int res = 0, empty = 1;\n    void dfs(vector<vector<int>>& grid, int x, int y, int count) {\n        if (x < 0 || x >= grid.size() || y < 0 || y >= grid[0].size() || grid[x][y] == -1) return;\n        \n        if (grid[x][y] == 2) {\n            if(empty == count) res++; \n            return;\n        }\n        \n        grid[x][y] = -1;\n        \n        dfs(grid, x+1, y, count+1);\n        dfs(grid, x-1, y, count+1);\n        dfs(grid, x, y+1, count+1);\n        dfs(grid, x, y-1, count+1);\n        \n        grid[x][y] = 0;\n        \n    }\n    \n    int uniquePathsIII(vector<vector<int>>& grid) {\n        int start_x, start_y;\n        for (int i = 0; i < grid.size(); i++) {\n            for (int j = 0; j < grid[0].size(); j++) {\n                if (grid[i][j] == 1) start_x = i, start_y = j;\n                else if (grid[i][j] == 0) empty++;\n            }\n        }\n        \n        dfs(grid, start_x, start_y, 0);\n        return res;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"unique-paths-iii"}