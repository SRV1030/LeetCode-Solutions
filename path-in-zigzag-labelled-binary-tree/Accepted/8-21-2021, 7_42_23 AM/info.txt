{"id":541682320,"lang":"cpp","time":"6 months, 3 weeks","timestamp":1629511043,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/541682320/","is_pending":"Not Pending","title":"Path In Zigzag Labelled Binary Tree","memory":"6.4 MB","code":"/*\ninstance :\n\n1. get a number in odd row, like 14->4\nwe can see 14 as 9, and 9/2 will be 4 as tree's rule.\n\n\ta. offset from bound = upper bound of nrow+1 - last picked value = 15 - 14 = 1\n\tb. in order value = lower bound of nrow+1 + offset from bound = 8 + 1 = 9\n\tc. value of rnow = in order value / 2\n2. get a number in even row, like 4->3\nwe can see 3 as 2, because 4/2 will be 2. And we need to know in this rule, which value will be at the position of 2 should be.\n\n\ta. offset from bound = last picked value / 2 - lower bound of nrow = 4/2 - 2 = 0\n\tb. in order value = upper bound of nrow - offset from bound = 3 - 0 = 3\n*/\n\n\nclass Solution {\npublic:\n    vector<int> pathInZigZagTree(int label) {\n        int nrow = 1;\n        vector<int> res(1,label);\n        while(label >= pow(2,nrow)) \n            nrow++;\n        while(--nrow){\n            int tmp = 0;\n            if(nrow%2) \n                tmp = (pow(2,nrow+1)-1-res.back()+pow(2,nrow))/2;\n            else\n                tmp = pow(2,nrow)-1-(res.back()/2-pow(2,nrow-1));\n            res.push_back(tmp);\n        }\n        reverse(res.begin(),res.end());\n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111","title_slug":"path-in-zigzag-labelled-binary-tree"}