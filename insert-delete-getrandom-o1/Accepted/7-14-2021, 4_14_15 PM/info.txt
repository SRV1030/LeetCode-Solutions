{"id":522385528,"lang":"cpp","time":"8Â months","timestamp":1626258555,"status_display":"Accepted","runtime":"272 ms","url":"/submissions/detail/522385528/","is_pending":"Not Pending","title":"Insert Delete GetRandom O(1)","memory":"97.2 MB","code":"class RandomizedSet {\npublic:\n    set<int> s;\n    /** Initialize your data structure here. */\n    RandomizedSet() {\n        s.clear();\n    }\n    \n    /** Inserts a value to the set. Returns true if the set did not already contain the specified element. */\n    bool insert(int val) {\n        if(s.find(val) != s.end()){\n            return false;\n        }\n        s.insert(val);\n        return true;\n    }\n    \n    /** Removes a value from the set. Returns true if the set contained the specified element. */\n    bool remove(int val) {\n        if(s.find(val)==s.end()) return false;     \n        s.erase(val);\n        return true;\n    }\n    \n    /** Get a random element from the set. */\n    int getRandom() {\n         auto it = s.begin();\n        int rValue = rand()%s.size();\n        while(rValue--){\n            it++;\n        }\n        return *it;\n    }\n};\n\n/**\n * Your RandomizedSet object will be instantiated and called as such:\n * RandomizedSet* obj = new RandomizedSet();\n * bool param_1 = obj->insert(val);\n * bool param_2 = obj->remove(val);\n * int param_3 = obj->getRandom();\n */","compare_result":"1111111111111111111","title_slug":"insert-delete-getrandom-o1"}