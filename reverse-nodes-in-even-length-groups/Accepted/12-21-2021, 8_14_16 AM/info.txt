{"id":604744629,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1640053756,"status_display":"Accepted","runtime":"956 ms","url":"/submissions/detail/604744629/","is_pending":"Not Pending","title":"Reverse Nodes in Even Length Groups","memory":"329.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode * rev(ListNode *head,int mxl){\n        if(!head) return head;\n        ListNode* t=head;\n        int c=1;\n        for(;c<mxl && t->next;t=t->next,c++);\n        if(c%2){\n            t->next=rev(t->next,mxl+1);\n            return head;\n        }\n        ListNode* prev,*nxt=NULL;\n        prev=t->next;\n        t=head;\n        for(int i=0;i<c && head;i++){\n           nxt=head->next;\n           head->next=prev;\n           prev=head;\n           head=nxt;\n        }\n        t->next=rev(t->next,mxl+1);\n        return prev;\n    }\n    ListNode* reverseEvenLengthGroups(ListNode* head) {\n        return rev(head,1);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-nodes-in-even-length-groups"}