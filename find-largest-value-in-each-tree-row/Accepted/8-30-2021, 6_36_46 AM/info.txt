{"id":546393364,"lang":"cpp","time":"6 months, 2 weeks","timestamp":1630284706,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/546393364/","is_pending":"Not Pending","title":"Find Largest Value in Each Tree Row","memory":"22.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> largestValues(TreeNode* root) {\n        vector<int> v;\n        if(!root) return v;\n        queue<TreeNode*>q;\n        q.push(root);\n        v.push_back(root->val);\n        while(!q.empty()){\n            int n=q.size(),mx=INT_MIN;\n            for(int i=0;i<n;i++){\n                TreeNode *t=q.front();\n                q.pop();\n                if(t->left){\n                    if(t->left->val>mx)mx=t->left->val;\n                    q.push(t->left);\n                }\n                if(t->right){\n                    if(t->right->val>mx)mx=t->right->val;\n                    q.push(t->right);\n                }\n            }\n            if(!q.empty())v.push_back(mx);\n        }\n        return v;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-largest-value-in-each-tree-row"}