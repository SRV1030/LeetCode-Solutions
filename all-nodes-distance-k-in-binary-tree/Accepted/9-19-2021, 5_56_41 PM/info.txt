{"id":557481950,"lang":"cpp","time":"5 months, 3 weeks","timestamp":1632053501,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/557481950/","is_pending":"Not Pending","title":"All Nodes Distance K in Binary Tree","memory":"12.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> v;\n      void finddown(TreeNode* root,int k){\n        if(!root || k<0) return;\n        if(k==0)v.push_back(root->val);\n        finddown(root->left,k-1);\n        finddown(root->right,k-1);\n    }\n    int kdistNode(TreeNode*root,TreeNode* t,int k){\n        if(!root) return -1;\n        if(root==t){\n            finddown(root,k);\n            return 0;\n        }\n        int lr=kdistNode(root->left,t,k);\n        if(lr!=-1){\n            if(lr+1==k)v.push_back(root->val);\n            else finddown(root->right,k-lr-2);\n            return 1+lr;\n        }\n        int rr=kdistNode(root->right,t,k);\n        if(rr!=-1){\n            if(rr+1==k)v.push_back(root->val);\n            else finddown(root->left,k-rr-2);\n            return 1+rr;\n        }\n        return -1;\n    }\n    vector<int> distanceK(TreeNode* root, TreeNode* target, int k) {\n        kdistNode(root,target,k);\n        return v;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"all-nodes-distance-k-in-binary-tree"}