{"id":557480912,"lang":"cpp","time":"5 months, 3 weeks","timestamp":1632053267,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/557480912/","is_pending":"Not Pending","title":"All Nodes Distance K in Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> v;\n    void down(TreeNode* root,int k){\n        if(!root) return;\n        if(k==0) v.push_back(root->val);\n        down(root->left,k-1);\n        down(root->right,k-1);\n    }\n    int distk(TreeNode* root, TreeNode* target, int k){\n        if(!root) return -1;\n        if(root==target){\n            down(root,k);\n            return 0;\n        }\n        int lr=distk(root->left,target,k);\n        if(lr!=-1){\n            if(lr+1==k) v.push_back(root->val);\n            else down(root->right,k-lr-2);\n            return lr+1;\n        }\n        int rr=distk(root->right,target,k);\n        if(rr!=-1){\n            if(rr+1==k) v.push_back(root->val);\n            else down(root->left,k-lr-2);\n            return rr+1;\n        }\n        return -1;\n    }\n    vector<int> distanceK(TreeNode* root, TreeNode* target, int k) {\n        distk(root,target,k);\n        return v;\n    }\n};","compare_result":"111110111111111110111111011110111001111110100100110101100","title_slug":"all-nodes-distance-k-in-binary-tree"}