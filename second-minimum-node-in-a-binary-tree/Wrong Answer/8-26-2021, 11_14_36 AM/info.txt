{"id":544391852,"lang":"cpp","time":"6 months, 2 weeks","timestamp":1629955776,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/544391852/","is_pending":"Not Pending","title":"Second Minimum Node In a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    int findSecondMinimumValue(TreeNode* root) {\n        if(!root) return -1;\n        long long int mn=INT_MAX,r=root->val;\n        mn+=10;\n        queue<TreeNode*>q;\n        if(root->left)q.push(root->left);\n        if(root->right)q.push(root->right);\n        while(!q.empty()){\n            int n=q.size();\n            while(n--){\n                TreeNode *t=q.front();\n                q.pop();\n                if(t->val!=r && t->val<mn)mn=t->val;\n            }\n            if(mn-10!=INT_MAX) return mn;\n        }\n        return mn-10!=INT_MAX?mn:-1;\n    }\n};","compare_result":"111111111111111111111101111111111111011","title_slug":"second-minimum-node-in-a-binary-tree"}