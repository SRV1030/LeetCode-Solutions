{"id":569729047,"lang":"cpp","time":"5Â months","timestamp":1634001519,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/569729047/","is_pending":"Not Pending","title":"Univalued Binary Tree","memory":"9.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic: \n    bool ch(int &v,TreeNode* root){\n        if(!root) return true;\n        if(root->val!=v) return false;\n        return ch(v,root->left) && ch(v,root->right);\n    }\n    bool isUnivalTree(TreeNode* root) {\n        if(!root) return false;\n        return ch(root->val,root);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"univalued-binary-tree"}