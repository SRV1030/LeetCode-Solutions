{"id":543726918,"lang":"cpp","time":"6 months, 3 weeks","timestamp":1629856550,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/543726918/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *detectCycle(ListNode *head) {\n        ListNode *f=head,*s=head;\n        while(f->next){\n            s=s->next;\n            f=f->next;\n            if(f->next)f=f->next;\n            if(s==f){\n                ListNode *e=head;\n                while(s!=e){\n                    s=s->next;\n                    e=e->next;\n                }\n                return e;\n            }\n        }\n        return NULL;\n    }\n};","compare_result":"1110000000000000","title_slug":"linked-list-cycle-ii"}