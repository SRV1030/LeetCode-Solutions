{"id":620138722,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1642231842,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/620138722/","is_pending":"Not Pending","title":"Rotting Oranges","memory":"13.1 MB","code":"class Solution {\npublic:\n    int orangesRotting(vector<vector<int>>& g) {\n        queue<pair<int,int>>q;\n        int c=0,r=0;\n        int dir[][2]={{1,0},{-1,0},{0,1},{0,-1}};\n        for(int i=0;i<g.size();i++)\n            for(int j=0;j<g[i].size();j++)\n                if(g[i][j]){\n                    c++;\n                    if(g[i][j]==2) q.push({i,j});\n                }\n        int m=0;\n        while(!q.empty()){\n            int n=q.size();            \n            r+=n;\n            while(n--){\n                int x=q.front().first,y=q.front().second;\n                q.pop();\n                for(int d=0;d<4;d++){\n                    int i=x+dir[d][0],j=y+dir[d][1];\n                    if(i<0 || i>=g.size() || j<0 || j>=g[0].size() || g[i][j]==0 || g[i][j]==2) continue;\n                    g[i][j]=2;\n                    q.push({i,j});\n                }\n            }\n            if(!q.empty())m++;\n        }\n        return r==c?m:-1;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotting-oranges"}