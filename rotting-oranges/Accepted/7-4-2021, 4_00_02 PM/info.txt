{"id":517197572,"lang":"cpp","time":"8 months, 1 week","timestamp":1625393702,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/517197572/","is_pending":"Not Pending","title":"Rotting Oranges","memory":"12.8 MB","code":"class Solution {\npublic:int m,n;\n    void dfs(int i,int j,vector<vector<int>>& g,bool start,int c){\n         if(i<0 || i>=m || j<0 || j>=n || g[i][j]==0|| g[i][j]<0 && -g[i][j]<c )\n            return;\n        if(g[i][j]==2 && !start)\n            return;\n        g[i][j]=-c;\n        dfs(i+1,j,g,false,c+1);\n        dfs(i,j+1,g,false,c+1);\n        dfs(i-1,j,g,false,c+1);\n        dfs(i,j-1,g,false,c+1);\n    }\n    int orangesRotting(vector<vector<int>>& g) {\n        m=g.size();\n        n=g[0].size();  \n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n                if(g[i][j]==2)\n                    dfs(i,j,g,true,0);\n            }\n        }\n        int ans=0;\n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n                if(g[i][j]==1)\n                    return -1;\n                ans=max(ans,abs(g[i][j]));\n            }\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotting-oranges"}