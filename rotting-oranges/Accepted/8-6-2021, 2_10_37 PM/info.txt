{"id":534144400,"lang":"cpp","time":"7 months, 1 week","timestamp":1628238337,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/534144400/","is_pending":"Not Pending","title":"Rotting Oranges","memory":"12.8 MB","code":"class Solution {\npublic:\n    int m,n;\n    void dfs(vector<vector<int>>& g,int i,int j,bool start,int c){\n        if(i<0 || i>=m || j<0 || j>=n || g[i][j]==0 ||(g[i][j]<0 && -g[i][j]<c)) return;\n        if(g[i][j]==2 && !start) return;\n        g[i][j]=-c;\n        dfs(g,i+1,j,false,c+1);\n        dfs(g,i,j+1,false,c+1);\n        dfs(g,i-1,j,false,c+1);\n        dfs(g,i,j-1,false,c+1);\n            \n    }\n    int orangesRotting(vector<vector<int>>& g) {\n        m=g.size(),n=g[0].size();\n        for(int i=0;i<m;i++){\n           for(int j=0;j<n;j++){\n               if(g[i][j]==2){\n                   dfs(g,i,j,true,0);\n               }\n           }\n        }\n        int mx=0;\n        for(int i=0;i<m;i++){\n           for(int j=0;j<n;j++){\n               if(g[i][j]==1) return -1;\n               mx=max(mx,abs(g[i][j]));\n           }\n        }\n        return mx;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotting-oranges"}