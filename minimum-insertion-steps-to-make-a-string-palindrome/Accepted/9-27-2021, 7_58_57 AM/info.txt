{"id":561582524,"lang":"cpp","time":"5 months, 2 weeks","timestamp":1632708837,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/561582524/","is_pending":"Not Pending","title":"Minimum Insertion Steps to Make a String Palindrome","memory":"7.6 MB","code":"class Solution {\npublic:\n    int minInsertions(string s) {\n        int n=s.size();\n        int t[n+1][n+1];\n        string r=s;\n        reverse(r.begin(),r.end());\n        for(int i=0;i<=n;i++)\n            for(int j=0;j<=n;j++){\n                if(i==0 || j==0)t[i][j]=0;\n                else{\n                    if(s[i-1]==r[j-1]) t[i][j]=1+t[i-1][j-1];\n                    else t[i][j]=max(t[i-1][j],t[i][j-1]);                    \n                }\n            }\n        return n-t[n][n];\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-insertion-steps-to-make-a-string-palindrome"}