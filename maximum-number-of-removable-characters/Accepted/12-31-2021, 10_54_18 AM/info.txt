{"id":610204103,"lang":"cpp","time":"2 months, 1 week","timestamp":1640927358,"status_display":"Accepted","runtime":"232 ms","url":"/submissions/detail/610204103/","is_pending":"Not Pending","title":"Maximum Number of Removable Characters","memory":"106.4 MB","code":"class Solution {\npublic:\n    vector<int>rem;\n    bool isSub(string& s , string& p){\n        int i = 0  ; int j = 0;\n        while (i<p.length()){\n            if (j==s.length()) return false;\n            if (p[i]==s[j]){i++ ; j++;}\n            else\n                j++;\n        }\n        return true;\n    }\n    bool canRem(int ind,string s,string p){\n        for(int i=0;i<ind;i++)s[rem[i]]='@';\n        return isSub(s,p);\n    }\n    int maximumRemovals(string s, string p, vector<int>& removable) {\n        rem=removable;\n        int l=0,h=rem.size();\n        while(l<h){\n            int m=(l+h+1)/2;\n            if(canRem(m,s,p)) l=m;\n            else h=m-1;\n        }\n        return l;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-number-of-removable-characters"}