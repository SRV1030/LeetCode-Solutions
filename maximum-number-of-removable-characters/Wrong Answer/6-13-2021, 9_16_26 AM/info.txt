{"id":507114774,"lang":"cpp","time":"9Â months","timestamp":1623555086,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/507114774/","is_pending":"Not Pending","title":"Maximum Number of Removable Characters","memory":"N/A","code":"class Solution {\npublic:\n    int maximumRemovals(string s, string p, vector<int>& r) {\n        unordered_map<char,int>mps;\n        unordered_map<char,int>mpp;\n        for(auto i:s)mps[i]++;\n        for(auto i:p)mpp[i]++;\n        int i;\n        for(i=0;i<r.size();i++){\n            if(mpp.count(s[r[i]])){\n                if(p.length()>r[i] && p[r[i]]==s[r[i]]) return i;\n                else{\n                    if(mps[s[r[i]]]>mpp[s[r[i]]]){\n                        cout<<s[r[i]]<<\" \";\n                    mps[s[r[i]]]--;\n                    s.erase(i,1);\n                    \n                } \n                else return i;\n                }\n            }\n            else{\n                mps[s[r[i]]]--;\n                s.erase(i,1);\n            }\n        }      \n        return i-1;\n        \n        \n    }\n};","compare_result":"111000000000000000000000000000000000000000000000000000000011000000","title_slug":"maximum-number-of-removable-characters"}