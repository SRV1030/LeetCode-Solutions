{"id":542681148,"lang":"cpp","time":"6 months, 3 weeks","timestamp":1629686066,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/542681148/","is_pending":"Not Pending","title":"Cheapest Flights Within K Stops","memory":"N/A","code":"class Solution {\npublic:\n    void addEdge(int u,int v,int wt,vector<pair<int,int>>adj[]){\n        adj[u].push_back({v,wt});\n        return;\n    }\n    \n    int findCheapestPrice(int n, vector<vector<int>>& flights, int src, int dst, int k) {\n        vector<pair<int,int>>adj[n+1];\n        for(int i=0;i<n;i++)\n            addEdge(flights[i][0],flights[i][1],flights[i][2],adj);\n        \n        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>pq;\n        // queue<pair<int,int>>pq;\n        vector<int>distance(n,INT_MAX);\n        pq.push({0,src});\n        distance[src] = 0;\n        k+=1;\n        while(!pq.empty()&&k--){\n            int s = pq.size();\n            for(int i=0;i<s;i++){\n            int node = pq.top().second;\n            int dist = pq.top().first;\n            pq.pop();\n            for(auto x:adj[node]){\n                if(dist + x.second <=distance[x.first]){\n                    distance[x.first] = dist + x.second;\n                    pq.push({dist + x.second,x.first});\n                    }\n                }\n            }\n        }\n        return distance[dst]==INT_MAX?-1:distance[dst];\n    }\n};","compare_result":"1110000000000000000000000000000000000000000000000","title_slug":"cheapest-flights-within-k-stops"}