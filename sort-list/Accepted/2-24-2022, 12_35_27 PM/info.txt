{"id":647944038,"lang":"cpp","time":"2 weeks, 3 days","timestamp":1645685427,"status_display":"Accepted","runtime":"373 ms","url":"/submissions/detail/647944038/","is_pending":"Not Pending","title":"Sort List","memory":"152.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* sortedMerge(ListNode *a,ListNode *b){\n        if(!a) return b;\n        if(!b) return a;\n        ListNode* c=NULL;\n        if(a->val<=b->val){\n            c=new ListNode(a->val);\n            c->next=sortedMerge(a->next,b);\n        }\n        else{\n            c=new ListNode(b->val);\n            c->next=sortedMerge(a,b->next);\n        }\n        return c;\n    }\n    void divMid(ListNode *head,ListNode **a,ListNode **b){\n        if(!head || !head->next) return;\n        ListNode *s=head,*f=head->next;\n        while(f){\n            f=f->next;\n            if(f){\n                s=s->next;\n                f=f->next;\n            }\n        }\n        *a=head;\n        *b=s->next;\n        s->next=NULL;\n        return;        \n    }\n    ListNode* sortList(ListNode* head) {\n         if(!head || !head->next) return head;\n         ListNode *a=NULL,*b=NULL;\n        divMid(head,&a,&b);\n        a=sortList(a);\n        b=sortList(b);\n        head=sortedMerge(a,b);\n        return head;\n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"sort-list"}