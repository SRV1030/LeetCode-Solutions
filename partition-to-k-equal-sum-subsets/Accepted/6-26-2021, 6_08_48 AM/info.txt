{"id":513211003,"lang":"cpp","time":"8 months, 3 weeks","timestamp":1624667028,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/513211003/","is_pending":"Not Pending","title":"Partition to K Equal Sum Subsets","memory":"9.1 MB","code":"class Solution {\npublic: bool ans=false;\n    int n,s;\n    void dfs(vector<int>& nums, int k,int curS,int sum,vector<int> &vis,int ind,int c){\n        if(ans || curS<0) return;\n        if(c==k){\n            ans=true;\n            return;\n        }\n        if(curS==0){\n            c++;\n            dfs(nums,k,sum,sum,vis,0,c);\n        }\n        for(int i=ind;i<n;i++){\n           if(vis[i]==0){\n               if(curS>=0){                   \n                 vis[i]=1;\n                 dfs(nums,k,curS-nums[i],sum,vis,i,c);\n                  vis[i]=0;\n               }\n               \n           }\n        }\n    }\n    bool canPartitionKSubsets(vector<int>& nums, int k) {\n        n=nums.size(),s=0;\n        for(auto i:nums)s+=i;\n        if(s%k) return false;\n        vector<int>vis(n,0);\n        dfs(nums,k,s/k,s/k,vis,0,0);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-to-k-equal-sum-subsets"}