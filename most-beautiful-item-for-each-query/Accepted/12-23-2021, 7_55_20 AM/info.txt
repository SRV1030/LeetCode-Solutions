{"id":605770481,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1640225420,"status_display":"Accepted","runtime":"316 ms","url":"/submissions/detail/605770481/","is_pending":"Not Pending","title":"Most Beautiful Item for Each Query","memory":"88.6 MB","code":"class Solution {\npublic:\n    vector<int> maximumBeauty(vector<vector<int>>& items, vector<int>& queries) {\n        sort(items.begin(),items.end());\n        map<int,int>mp;\n        int mx=0;\n        for(auto& i:items){\n            if(i[1]>mx){\n                mx=i[1];\n                mp[i[0]]=mx;\n            }\n        }\n        vector<int>ans;\n        for(auto& i:queries){\n            auto it= mp.upper_bound(i);\n            if(it==mp.begin())ans.push_back(0);\n            else {\n                advance(it, -1);\n                ans.push_back(it->second);\n            }\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111","title_slug":"most-beautiful-item-for-each-query"}