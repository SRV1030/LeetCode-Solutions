{"id":507558805,"lang":"cpp","time":"9Â months","timestamp":1623632821,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/507558805/","is_pending":"Not Pending","title":"Cousins in Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int Level(TreeNode* root,int x,int c){\n        if(!root) return c;\n        if(root->val==x) return c;\n        int l=Level(root->left,x,c+1);\n        if(l!=0) return l;\n        return  Level(root->right,x,c+1);\n    }\n    bool isSibling(TreeNode* root, int x, int y){\n        if(!root) return false;\n        return (root->left->val==x && root->right->val==y) ||(root->left->val==y && root->right->val==x) || isSibling(root->left,x,y) || isSibling(root->right,x,y);\n    }\n    bool isCousins(TreeNode* root, int x, int y) {\n        return Level(root,x,0)==Level(root,y,0) && !isSibling(root,x,y);\n    }\n};","compare_result":"10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"cousins-in-binary-tree"}