{"id":600473355,"lang":"cpp","time":"3Â months","timestamp":1639272259,"status_display":"Accepted","runtime":"140 ms","url":"/submissions/detail/600473355/","is_pending":"Not Pending","title":"Find Good Days to Rob the Bank","memory":"91.3 MB","code":"class Solution {\npublic:\n    vector<int>left,right;\n\n    void preprocess(vector<int> arr, int N){\n        left[0] = 0;\n        int lastIncr = 0; \n        for (int i = 1; i < N; i++){\n            if (arr[i] <= arr[i - 1])lastIncr++;\n            else lastIncr=0;\n            left[i] = lastIncr;\n        }        \n        right[N - 1] = 0;\n        int firstDecr = 0; \n        for (int i = N - 2; i >= 0; i--){\n            if (arr[i] <= arr[i + 1])\n                firstDecr ++;\n            else firstDecr=0;\n            right[i] = firstDecr;\n        }\n    }    \n \n    vector<int> goodDaysToRobBank(vector<int>& security, int time) {\n        vector<int>ans;\n        if(time==0) {\n            for(int i=0;i<security.size();i++)ans.push_back(i);\n            return ans;\n        }\n        int n=security.size();\n        left=vector<int>(n);\n        right=vector<int>(n);\n        preprocess(security,n);\n        for(int i=time;i<n-time;i++){      \n            // cout<<left[i]<<\" \"<<right[i]<<\" \"<<security[i]<<\" \"<<i<<\"\\n\";\n            if(left[i]>=time && right[i]>=time)ans.push_back(i);\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-good-days-to-rob-the-bank"}