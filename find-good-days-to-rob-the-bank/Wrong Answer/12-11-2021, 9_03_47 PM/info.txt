{"id":600264879,"lang":"cpp","time":"3Â months","timestamp":1639235927,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/600264879/","is_pending":"Not Pending","title":"Find Good Days to Rob the Bank","memory":"N/A","code":"class Solution {\npublic:\nvector<int>left,right;\n\nvoid preprocess(vector<int> arr, int N){\n    left[0] = 0;\n    int lastIncr = 0;\n \n    for (int i = 1; i < N; i++){\n        if (arr[i] > arr[i - 1])\n            lastIncr = i;\n        left[i] = lastIncr;\n    }\n        \n    right[N - 1] = N - 1;\n    int firstDecr = N - 1; \n    for (int i = N - 2; i >= 0; i--){\n        if (arr[i] > arr[i + 1])\n            firstDecr = i;\n        right[i] = firstDecr;\n    }\n}\n    \n \n    vector<int> goodDaysToRobBank(vector<int>& security, int time) {\n        vector<int>ans;\n        if(time==0) {\n            for(int i=0;i<security.size();i++)ans.push_back(i);\n            return ans;\n        }\n        int n=security.size();\n        left=vector<int>(n);\n        right=vector<int>(n);\n        preprocess(security,n);\n        for(int i=time;i<n-time;i++){            \n            if(security[i-1]>=security[i] && security[i+1]>=security[i] && right[i-time]<=right[i-1] && left[i+1]<=left[i+time])ans.push_back(i);\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111101111111111111111111111111110111111111111111011101001011011011111110","title_slug":"find-good-days-to-rob-the-bank"}