{"id":544287197,"lang":"cpp","time":"6Â months, 2Â weeks","timestamp":1629941895,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/544287197/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"14.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int getCount(ListNode *head){\n        int c=0;\n        ListNode *h=head;\n        while(h){\n            c++;\n            h= h->next;\n        }\n        return c;\n    }\n    ListNode *getInter(ListNode *headA, ListNode *headB,int c){\n        while(c--) headA=headA->next;\n        while(headA && headB){\n            if(headA==headB) return headA;\n            headA=headA->next;\n            headB=headB->next;\n        }\n        return NULL;\n    }\n    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {\n        int c1=getCount(headA);\n        int c2=getCount(headB);\n        int c=abs(c1-c2);\n        if(c1>c2) return getInter(headA,headB,c);\n        else return getInter(headB,headA,c);        \n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists"}