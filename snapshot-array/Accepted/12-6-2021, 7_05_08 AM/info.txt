{"id":597567714,"lang":"cpp","time":"3 months, 1 week","timestamp":1638753608,"status_display":"Accepted","runtime":"192 ms","url":"/submissions/detail/597567714/","is_pending":"Not Pending","title":"Snapshot Array","memory":"86.2 MB","code":"class SnapshotArray {\npublic:\n\tint snapId;\n\tvector<vector<pair<int, int>> *> map;\n\n\tSnapshotArray(int length) : snapId(0), map(length) {}\n\n\tvoid set(int index, int val) {\n\t\tauto* v = map[index];\n\t\tif (v == NULL)\n\t\t\tmap[index] = new vector<pair<int, int>>(1, make_pair(snapId, val));\n\t\telse if (v->back().first < snapId)\n\t\t\tv->emplace_back(make_pair(snapId, val));\n\t\telse\n\t\t\tv->back().second = val;\n\t}\n\t// snap_id for getting is different from setting. They have a difference of 1.\n\tint snap() { return snapId++; }\n\n\tint get(int index, int snap_id) {\n\t\tauto* v = map[index];\n\t\tif (v == NULL)\n\t\t\treturn 0;\t// not been set, return default value;\n\t\t// find the snap_id using binary search\n\t\tauto it = lower_bound(v->begin(), v->end(), make_pair(snap_id, 0), \n\t\t\t[](const auto& l, const auto& r) { return (l.first < r.first); } );\n\t\tif (it == v->end())\n\t\t\treturn v->back().second;\t// latest\n\t\tif (it->first == snap_id)\n\t\t\treturn it->second;\t\t\t// snap_id is found.\n\t\tif (it == v->begin())\t\t\t\n\t\t\treturn 0;\t\t\t\t\t// snap_id < 1st, it's default\n\t\treturn (--it)->second;\t\t\t// \"it\" is just bigger than snap_id, previous one is the result\n\t}\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"snapshot-array"}