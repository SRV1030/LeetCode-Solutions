{"id":537204713,"lang":"cpp","time":"7Â months","timestamp":1628746746,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/537204713/","is_pending":"Not Pending","title":"Target Sum","memory":"N/A","code":"class Solution {\npublic:\n    int subsum(vector<int>& nums, int s){\n        int n=nums.size();\n        int t[n+1][s+1];\n        for(int i=0;i<=n;i++){\n            t[i][0]=1;\n        }        \n        for(int i=1;i<=s;i++){\n            t[0][i]=0;\n        }\n        for(int i=1;i<=n;i++){\n            for(int j=1;j<=s;j++){\n                    if(nums[i-1]<=j)t[i][j]=t[i-1][j]+t[i-1][j-nums[i-1]];\n                    else t[i][j]=t[i-1][j];\n                \n            }\n        }\n        return t[n][s];\n    }\n    int findTargetSumWays(vector<int>& nums, int target) {\n        int s=0;\n        for(auto i:nums)s+=i;\n        s+=target;\n        if(s%2 || s/2<target) return 0;\n        s=s/2;\n        return subsum(nums,s);\n    }\n};\n","compare_result":"111111011100101111100101111111011111111111111111011011111111101111111111111101111111111101111101111011110111110111111111111111111111111111","title_slug":"target-sum"}