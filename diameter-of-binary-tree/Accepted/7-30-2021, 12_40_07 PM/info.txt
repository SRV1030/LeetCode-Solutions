{"id":530506229,"lang":"cpp","time":"7 months, 2 weeks","timestamp":1627628107,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/530506229/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"20.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int ht(TreeNode* root){\n        if(!root) return 0;\n        return max(ht(root->left),ht(root->right))+1;\n    }\n    int diameterOfBinaryTree(TreeNode* root) {\n        if(!root) return 0;\n        int l=ht(root->left),r=ht(root->right),ld=diameterOfBinaryTree(root->left),rd=diameterOfBinaryTree(root->right);\n        return max(l+r,max(ld,rd));\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree"}