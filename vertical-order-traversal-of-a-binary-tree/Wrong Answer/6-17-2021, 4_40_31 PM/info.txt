{"id":509205307,"lang":"cpp","time":"8 months, 4 weeks","timestamp":1623927331,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/509205307/","is_pending":"Not Pending","title":"Vertical Order Traversal of a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic: map<int,map<int,set<int>>> mp;\n    void dfs(TreeNode* root,int r,int c){\n        if(!root) return;\n        mp[r][c].insert(root->val);\n        dfs(root->left,r-1,c+1);\n        dfs(root->right,r+1,c+1);        \n    }\n    \n    vector<vector<int>> verticalTraversal(TreeNode* root) {\n        vector<vector<int>> v;\n        if(!root) return v;\n        dfs(root,0,0);\n        for(auto r:mp){\n            v.push_back({});\n            for(auto c:r.second)\n                for(auto e:c.second)\n                    v.back().push_back(e);\n        }\n        return v;\n            \n    }\n};","compare_result":"11111111111011111111111111111111","title_slug":"vertical-order-traversal-of-a-binary-tree"}