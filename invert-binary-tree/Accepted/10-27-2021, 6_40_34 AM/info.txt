{"id":577756464,"lang":"cpp","time":"4Â months, 2Â weeks","timestamp":1635296134,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/577756464/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"10.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* invertTree(TreeNode* root) {\n        if(!root) return NULL;\n        TreeNode* t= new TreeNode(root->val);\n        t->left=invertTree(root->right);\n        t->right=invertTree(root->left);\n        return t;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree"}