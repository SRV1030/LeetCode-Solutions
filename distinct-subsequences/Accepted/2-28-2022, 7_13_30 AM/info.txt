{"id":650252289,"lang":"cpp","time":"2Â weeks","timestamp":1646011710,"status_display":"Accepted","runtime":"58 ms","url":"/submissions/detail/650252289/","is_pending":"Not Pending","title":"Distinct Subsequences","memory":"10.8 MB","code":"class Solution {\npublic:\n    int dp[1005][1005];\n    int fun(string& s, string& t, int i, int j)\n    {\n        if(j==t.size()) //we got the whole string t \n            return 1;\n        if(i==s.size()) //we reached at the end of string s, but not found string t in it.\n            return 0;\n        if(dp[i][j]!=-1) \n            return dp[i][j];\n        \n        // if the letters at the current index in both the string are same, then move forward in both\n        // the string and also check, if the letter at current index in string t, agains comes in \n        // string s. So, we are adding the two functions.\n        if(s[i]==t[j])  \n            return dp[i][j]=fun(s, t, i+1, j+1)+fun(s, t, i+1, j);\n        \n        // if the letters at the current index in string s and t does not match, then move ahed only, \n        // in string s, because we have to match the letter with the string t.\n        else\n            return dp[i][j]=fun(s, t, i+1, j);\n    }\n    int numDistinct(string s, string t) {\n        memset(dp, -1, sizeof(dp));\n        return fun(s, t, 0, 0);\n    }\n};\n\n// https://www.youtube.com/watch?v=HtLVAvIGikU","compare_result":"1111111111111111111111111111111111111111111111111111111111111111","title_slug":"distinct-subsequences"}