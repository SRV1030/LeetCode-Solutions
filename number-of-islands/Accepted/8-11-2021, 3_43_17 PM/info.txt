{"id":536765040,"lang":"c","time":"7Â months","timestamp":1628675897,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/536765040/","is_pending":"Not Pending","title":"Number of Islands","memory":"7.8 MB","code":"void visit(char **grid, int i, int j, int gridSize, int *gridColSize)\n{\n    if (i < 0 || j < 0 || i >= gridSize)\n        return;\n    if (j >= gridColSize[i])\n        return;\n    if (grid[i][j] == '0')\n        return;\n    grid[i][j] = '0';\n    visit(grid, i-1, j, gridSize, gridColSize);\n    visit(grid, i+1, j, gridSize, gridColSize);\n    visit(grid, i, j-1, gridSize, gridColSize);\n    visit(grid, i, j+1, gridSize, gridColSize);\n}\n\nint numIslands(char** grid, int gridSize, int* gridColSize){\n    int i, j;\n    int res = 0;\n    \n    for (i = 0; i < gridSize; i++) {\n        for (j = 0; j < gridColSize[i]; j++) {\n            if (grid[i][j] == '1') {\n                visit(grid, i, j, gridSize, gridColSize);\n                res++;\n            }\n        }\n    }\n    return res;\n}","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"number-of-islands"}