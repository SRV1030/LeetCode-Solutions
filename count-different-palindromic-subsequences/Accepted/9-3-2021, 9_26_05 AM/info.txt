{"id":548685550,"lang":"cpp","time":"6 months, 1 week","timestamp":1630640465,"status_display":"Accepted","runtime":"241 ms","url":"/submissions/detail/548685550/","is_pending":"Not Pending","title":"Count Different Palindromic Subsequences","memory":"66.4 MB","code":"class Solution {\npublic:\n    int md=1e9+7;\n    int countPalindromicSubsequences(string s) {\n        int n=s.size();\n        vector<vector<long long int>>dp(n,vector<long long int>(n));\n        vector<int>prev(n),next(n);\n        unordered_map<char,int>mp;\n        for(int i=0;i<n;i++){\n            if(mp.count(s[i])) prev[i]=mp[s[i]];\n            else prev[i]=-1;\n            mp[s[i]]=i;\n        }\n        mp.clear();\n        for(int i=n-1;i>=0;i--){\n            if(mp.count(s[i])) next[i]=mp[s[i]];\n            else next[i]=-1;\n            mp[s[i]]=i;\n        }\n        // for(int i=0;i<n;i++) cout<<prev[i]<<\" \";\n        // cout<<\"\\n\";\n        // for(int i=0;i<n;i++) cout<<next[i]<<\" \";\n        // cout<<\"\\n\";\n        for(int g=0;g<n;g++){\n            for(int i=0,j=g;j<n;j++,i++){\n                if(g==0) dp[i][j]=1;\n                else if(g==1)dp[i][j]=2;\n                else{\n                    if(s[i]==s[j]){\n                        if(next[i]>prev[j])dp[i][j]=(2*dp[i+1][j-1]+2)%md;\n                        else if(next[i]==prev[j])dp[i][j]=(2*dp[i+1][j-1]+1)%md;\n                        else dp[i][j]=((2*dp[i+1][j-1])%md-(dp[next[i]+1][prev[j]-1])%md)%md;\n                    }\n                    else dp[i][j]=(dp[i+1][j]%md+dp[i][j-1]%md-dp[i+1][j-1]%md)%md;\n                }\n                if(dp[i][j]<0)\n                        dp[i][j]+=md;\n            }\n        }\n        // for(int i=0;i<n;i++){\n        //     for(int j=0;j<n;j++)cout<<dp[i][j]<<\" \";\n        //     cout<<\"\\n\";\n        // }\n        return dp[0][n-1];\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-different-palindromic-subsequences"}