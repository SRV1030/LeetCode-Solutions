{"id":640953480,"lang":"cpp","time":"3 weeks, 6 days","timestamp":1644808941,"status_display":"Accepted","runtime":"540 ms","url":"/submissions/detail/640953480/","is_pending":"Not Pending","title":"Minimum Operations to Make the Array Alternating","memory":"139.8 MB","code":"class Solution {\npublic:\n    int minimumOperations(vector<int>& nums) {\n        unordered_map<int,int>me,mo;\n        int te=0,to=0;\n        for(int i=0;i<nums.size();i++){\n            if(i&1)mo[nums[i]]++,to++;\n            else me[nums[i]]++,te++;\n        }\n        int fe=0,fec=0,se=0,sec=0,fo=0,foc=0,so=0,soc=0;\n        for(auto&[k,v]:me){\n            if(v>fec){\n                sec=fec;\n                se=fe;\n                fe=k;\n                fec=v;\n            }\n            else if(v>sec){\n                sec=v;\n                se=k;\n            }\n        }\n        for(auto&[k,v]:mo){\n            if(v>foc){\n                soc=foc;\n                so=fo;\n                fo=k;\n                foc=v;\n            }\n            else if(v>soc){\n                soc=v;\n                so=k;\n            }\n        }\n        int oe=0,oo=0;\n        oe+=(te-fec);\n        if(fe!=fo) oe+=(to-foc);\n        else oe+=(to-soc);\n        oo+=(to-foc);\n        if(fe!=fo) oo+=(te-fec);\n        else oo+=(te-sec);\n        return min(oo,oe);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-operations-to-make-the-array-alternating"}