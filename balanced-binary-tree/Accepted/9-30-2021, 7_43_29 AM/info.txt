{"id":563234047,"lang":"cpp","time":"5 months, 2 weeks","timestamp":1632967109,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/563234047/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"21.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic: bool f=true;\n    int ht(TreeNode* root){\n        if(!root || !f) return 0;\n        int l=ht(root->left),r=ht(root->right); \n        if(abs(l-r)>1) f=false;\n        return max(l,r)+1;\n    }\n    bool isBalanced(TreeNode* root) {\n        ht(root);\n        return f;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree"}