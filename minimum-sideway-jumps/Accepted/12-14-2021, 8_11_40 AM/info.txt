{"id":601504818,"lang":"cpp","time":"3Â months","timestamp":1639448800,"status_display":"Accepted","runtime":"640 ms","url":"/submissions/detail/601504818/","is_pending":"Not Pending","title":"Minimum Sideway Jumps","memory":"379.2 MB","code":"class Solution {\npublic: int mnj=INT_MAX;\n    vector<vector<int>>dp;\n    int jump(int side,vector<int>& obs,int cp){        \n        if(cp==obs.size()-2) return dp[cp][side]=0;\n        if(dp[cp][side]!=-1) return dp[cp][side];\n        if(obs[cp+1]!=side) return dp[cp][side]=jump(side,obs,cp+1);\n        else{   \n            int s1,s2;\n            if(side==1){s1=2;s2=3;}\n            else if(side==2){s1=1;s2=3;}\n            else {s1=1;s2=2;}\n            if(obs[cp]==s1)return dp[cp][side]=1+jump(s2,obs,cp);\n            else if(obs[cp]==s2) return dp[cp][side]=1+jump(s1,obs,cp);\n            else return dp[cp][side]=1+min(jump(s2,obs,cp),jump(s1,obs,cp));\n        }\n        return dp[cp][side]=0;        \n    }\n    int minSideJumps(vector<int>& obs) {\n        dp=vector<vector<int>>(obs.size()+1,vector<int>(4,-1));        \n        return jump(2,obs,0);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"minimum-sideway-jumps"}