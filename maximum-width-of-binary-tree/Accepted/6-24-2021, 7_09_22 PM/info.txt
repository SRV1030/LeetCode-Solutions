{"id":512555862,"lang":"cpp","time":"8 months, 3 weeks","timestamp":1624541062,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/512555862/","is_pending":"Not Pending","title":"Maximum Width of Binary Tree","memory":"17.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int widthOfBinaryTree(TreeNode* root) {\n        deque<pair<TreeNode *,unsigned long long >>dq;\n        dq.push_back({root,1});\n        unsigned long long mx=0;\n        while(!dq.empty()){\n            mx=max(mx,dq.back().second-dq.front().second+1);\n            unsigned long long n=dq.size();\n            for(int i=0;i<n;i++){\n                TreeNode *node=dq.front().first;\n                unsigned long long w=dq.front().second;\n                dq.pop_front();\n                if(node->left)dq.push_back({node->left,2*w});\n                if(node->right)dq.push_back({node->right,2*w+1});                \n                \n            }\n        }\n        return mx;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-width-of-binary-tree"}