{"id":554490365,"lang":"cpp","time":"6Â months","timestamp":1631581134,"status_display":"Accepted","runtime":"425 ms","url":"/submissions/detail/554490365/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"118 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *rev(ListNode *head){\n        if(!head) return NULL;\n        ListNode *prev=NULL,*nxt=NULL;\n        while(head){\n            nxt=head->next;\n            head->next=prev;\n            prev=head;\n            head=nxt;\n        }\n        return prev;\n    }\n    bool isPalindrome(ListNode* head) {\n        if(!head || !head->next) return true;\n        ListNode* s=head,*f=head;\n        while(f->next && f->next->next){\n            s=s->next;\n            f=f->next->next;\n        }\n        ListNode* cur=head;\n        s->next=rev(s->next);\n        s=s->next;\n        while(s){\n            if(cur->val!=s->val) return false;\n            cur=cur->next;\n            s=s->next;\n        }\n        return true;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list"}