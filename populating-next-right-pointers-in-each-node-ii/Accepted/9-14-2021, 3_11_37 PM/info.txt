{"id":554708081,"lang":"cpp","time":"6Â months","timestamp":1631611597,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/554708081/","is_pending":"Not Pending","title":"Populating Next Right Pointers in Each Node II","memory":"17.6 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* left;\n    Node* right;\n    Node* next;\n\n    Node() : val(0), left(NULL), right(NULL), next(NULL) {}\n\n    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}\n\n    Node(int _val, Node* _left, Node* _right, Node* _next)\n        : val(_val), left(_left), right(_right), next(_next) {}\n};\n*/\n\nclass Solution {\npublic:\n    Node* connect(Node* root) {\n        if(!root) return root;\n        queue<Node*>q;\n        q.push(root);\n        while(!q.empty()){\n            int n=q.size();\n            while(n--){\n                Node *t=q.front();\n                q.pop();\n                t->next=q.empty()||n==0?NULL:q.front();\n                if(t->left)q.push(t->left);\n                if(t->right)q.push(t->right);\n            }\n        }\n        return root;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"populating-next-right-pointers-in-each-node-ii"}