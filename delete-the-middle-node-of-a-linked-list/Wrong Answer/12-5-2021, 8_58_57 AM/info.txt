{"id":597098136,"lang":"cpp","time":"3 months, 1 week","timestamp":1638674037,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/597098136/","is_pending":"Not Pending","title":"Delete the Middle Node of a Linked List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteMiddle(ListNode* head) {\n        if(!head || !head->next) return head;\n        ListNode* s=head,*f=head,*pr;\n        while(f && f->next){\n            pr=s;\n            s=s->next;\n            f=f->next->next;\n        }\n        pr->next=s->next;\n        delete s;\n        return head;\n    }\n};","compare_result":"1110011111011111011111111111111111111111111111111111111111111111111111","title_slug":"delete-the-middle-node-of-a-linked-list"}