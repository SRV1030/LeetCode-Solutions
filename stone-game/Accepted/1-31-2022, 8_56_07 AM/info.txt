{"id":631327057,"lang":"cpp","time":"1 month, 1 week","timestamp":1643598667,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/631327057/","is_pending":"Not Pending","title":"Stone Game","memory":"8.6 MB","code":"// class Solution {\n// public:    \n//     int dp[501][501];\n//     int solve(vector<int>& piles,int i,int j){\n//         if(i>j) return 0;\n//         if(i==j) return dp[i][j]=piles[i];\n//         if(dp[i][j]!=-1) return -1;\n//         int l=piles[i]+solve(piles,i+1,j);\n//         int r=piles[j]+solve(piles,i,j-1);\n//         return dp[i][j]=max(l,r);\n//     }\n//     bool stoneGame(vector<int>& piles) {\n//         memset(dp,-1,sizeof(dp));\n//         int s=0;\n//         for(auto&i:piles)s+=i;\n//         int alice=solve(piles,0,piles.size()-1);\n//         // cout<<alice<<\" \";\n//         return 2*alice>s;//alice>s-alice[bob=s-alice]        \n//     }\n// };\n\n// class Solution {\n// public:\n//     bool stoneGame(vector<int>& piles) {        \n//         return true;       \n//     }\n// };\n\nclass Solution {\npublic:\n    int dp[501][501];\n    int solve(int i,int j,vector<int> &piles,int sum){\n        if(i > j) return 0;\n        else if(dp[i][j] != -1) return dp[i][j];\n        \n        int option1 = piles[i] + min(solve(i+2,j,piles,sum) , solve(i+1,j-1,piles,sum));\n        \n        int option2 = piles[j] + min(solve(i+1,j-1,piles,sum) , solve(i,j-2,piles,sum));\n        \n        int alice = max(option1,option2);\n        \n        return dp[i][j] = alice;\n    }\n    \n    bool stoneGame(vector<int>& piles) {\n        int n = piles.size();\n        int i = 0, j = n-1;\n        \n        memset(dp,-1,sizeof dp);\n        \n        int sum = accumulate(piles.begin(),piles.end(),0);\n        \n        int alice = solve(i,j,piles,sum);\n        int bob = sum - alice;\n        \n        int res = alice > bob;\n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"stone-game"}