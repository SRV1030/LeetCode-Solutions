{"id":546967966,"lang":"cpp","time":"6Â months, 2Â weeks","timestamp":1630373798,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/546967966/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"7.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        if(!head || !head->next) return false;\n        ListNode *s=head,*f=head;\n        while(f->next && f->next->next){\n            s=s->next;\n            f=f->next->next;\n            if(s==f) return true;\n        }\n        return false;\n    }\n};","compare_result":"11111111111111111111","title_slug":"linked-list-cycle"}