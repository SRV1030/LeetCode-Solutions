{"id":507285581,"lang":"cpp","time":"9Â months","timestamp":1623583775,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/507285581/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        if(!head || !head->next) return false;\n        ListNode *s=head,*f=head;\n        s=s->next;\n        f=f->next;\n        if(!f->next) return false;\n        f=f->next;        \n        while( s && f){\n            if(s==f) return true;\n            s=s->next;\n            f=f->next->next;         \n            \n        }\n        return false;\n    }\n};","compare_result":"1111111111111100000","title_slug":"linked-list-cycle"}