{"id":655095259,"lang":"cpp","time":"6 days, 16 hours","timestamp":1646646929,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/655095259/","is_pending":"Not Pending","title":"Matrix Block Sum","memory":"9.6 MB","code":"\n// This question is similar to a vector segment sum.\n\n// To extract sum of an arbitrary sub-array, we first form a prefix sum array.\n// [1, 2, 3, 4, 5] // original vector\n// [1, 3, 6, 10, 15] // prefix sum\n\n// To get sum of a sub array from index a to index b, sum(a, b), we can instead calculate prefix(b) - prefix(a-1)\n\n// Similar in 2D, we form prefix matrix, where sum[i][j] = sum of elements on top left of original matrix\n// [1, 2, 3]\n// [4, 5, 6]\n// [7, 8, 9]\n\n// [1, 3, 6]\n// [5, 12, 21]\n// [12, 27, 45]\n\n// Similarly, Sum of an arbitrary block from (i-K, j-K) to (i+K, j+K)\n// ans(i, j) = prefix(i+K, j+K) - prefix(i+K, j-K-1) - prefix (i-K-1, j+K) + prefix(i-K-1, j-K-1);\n// https://www.youtube.com/watch?v=jor18pkf9EE\n\n\nclass Solution {\npublic:\n    vector<vector<int>>sum;\n    int r,c;\n    int getS(int i,int j){\n        if(i<0 || j<0) return 0;\n        i=(i>=r)?r-1:i;\n        j=(j>=c)?c-1:j;\n        return sum[i][j];\n    }\n    vector<vector<int>> matrixBlockSum(vector<vector<int>>& mat, int k) {\n        r=mat.size(),c=mat[0].size();\n        vector<vector<int>> ans=vector<vector<int>>(r,vector<int>(c,0));\n        sum=ans;\n        for(int i=0;i<r;i++)\n            for(int j=0;j<c;j++)\n                sum[i][j]=mat[i][j]+getS(i-1,j)+getS(i,j-1)-getS(i-1,j-1);        \n        for(int i=0;i<r;i++)\n            for(int j=0;j<c;j++)\n                ans[i][j]=getS(i+k,j+k)+getS(i-k-1,j-k-1)-getS(i+k,j-k-1)-getS(i-k-1,j+k);\n        return ans;\n    }\n};","compare_result":"111111111111","title_slug":"matrix-block-sum"}