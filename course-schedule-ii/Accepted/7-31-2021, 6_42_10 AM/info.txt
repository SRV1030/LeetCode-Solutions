{"id":530851069,"lang":"cpp","time":"7 months, 2 weeks","timestamp":1627693030,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/530851069/","is_pending":"Not Pending","title":"Course Schedule II","memory":"14.2 MB","code":"class Solution {\npublic:\n    // bool dfs(vector<vector<int>> grid,vector<bool> &vis,vector<bool> &visP,int i){\n    //     vis[i]=true;\n    //     visP[i]=true;\n    //     for(auto j:grid[i]){\n    //         if(!vis[j])\n    //             if(dfs(grid,vis,visP,j)) return true;\n    //         if(visP[j]) return true;\n    //     }\n    //     visP[i]=false;\n    //     return false;        \n    // }\n    // bool detectCycle(vector<vector<int>> grid, int V){\n    //     vector<bool> vis(V,false),visP(V,false);\n    //     for(int i=0;i<V;i++)\n    //         if(!vis[i])\n    //             if(dfs(grid,vis,visP,i)) return true;\n    //     return false;\n    // }\n    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {\n        vector<vector<int>> g(numCourses);        \n        vector<int>ind(numCourses);\n        for(auto i:prerequisites){\n             g[i[1]].push_back(i[0]);\n             ind[i[0]]++;\n        }\n        vector<int> ans;\n        // if(detectCycle(g,numCourses)) return ans;\n        queue<int> q;\n        // for(auto i:g)\n        //     for(auto j:i) ind[j]++;\n        for(int i=0;i<numCourses;i++)\n            if(!ind[i]) q.push(i);\n        while(!q.empty()){\n            int n=q.size();\n            while(n--){\n                int x=q.front();\n                q.pop();\n                ans.push_back(x);\n                for(auto i:g[x]){\n                    ind[i]--;\n                    if(ind[i]==0) q.push(i);\n                }\n                    \n            }\n        }\n        return ans.size()==numCourses?ans:vector<int>();\n    }\n};","compare_result":"11111111111111111111111111111111111111111111","title_slug":"course-schedule-ii"}