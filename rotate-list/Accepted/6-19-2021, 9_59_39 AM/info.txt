{"id":509964468,"lang":"cpp","time":"8Â months, 3Â weeks","timestamp":1624076079,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/509964468/","is_pending":"Not Pending","title":"Rotate List","memory":"11.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    int Count(ListNode* head){\n        ListNode*p=head;\n        int c=0;\n        while(p){\n            p=p->next;\n            c++;\n        }\n        return c;\n    }\n    ListNode* rotateRight(ListNode* head, int k) {\n        if(!head) return head;\n        int n=Count(head);\n        k=k%n;\n        if(!k)return head;\n        k=n-k-1;\n        ListNode*p=head,*h=head;\n        while(k--) p=p->next;\n        ListNode* q=p->next;\n        p->next=NULL;\n        head=q;\n        while(q->next) q=q->next;\n        q->next=h;\n        return head;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-list"}