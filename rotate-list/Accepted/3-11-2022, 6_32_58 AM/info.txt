{"id":657515853,"lang":"cpp","time":"3 days, 1 hour","timestamp":1646959678,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/657515853/","is_pending":"Not Pending","title":"Rotate List","memory":"11.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* rotateRight(ListNode* head, int k) {\n        if(!head || !head->next || !k) return head;\n        ListNode*p=head;\n        int c=1;\n        while(p->next && ++c) p=p->next;\n        k=k%c;\n        k=c-k;\n        p->next=head;\n        while(k--)p=p->next;\n        head=p->next;\n        p->next=NULL;        \n        return head;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-list"}