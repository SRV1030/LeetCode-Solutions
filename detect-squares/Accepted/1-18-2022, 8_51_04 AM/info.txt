{"id":622176484,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1642475164,"status_display":"Accepted","runtime":"440 ms","url":"/submissions/detail/622176484/","is_pending":"Not Pending","title":"Detect Squares","memory":"93.8 MB","code":"class DetectSquares {\npublic:\n    unordered_map<int,map<int,int>>mp;\n    DetectSquares() {\n        mp.clear();\n    }\n    \n    void add(vector<int> point) {\n        mp[point[1]][point[0]]++;\n    }\n    \n    int count(vector<int> point) {\n        int x=point[0],y=point[1],c=0;\n        for(auto&[k,v]:mp[y]){\n            if(k==x)continue;\n            int l=abs(k-x);\n            if(y-l>=0)c+=v*mp[y-l][x]*mp[y-l][k];\n            if(y+l<=1000)c+=v*mp[y+l][x]*mp[y+l][k];\n        }\n        return c;\n    }\n};\n\n/**\n * Your DetectSquares object will be instantiated and called as such:\n * DetectSquares* obj = new DetectSquares();\n * obj->add(point);\n * int param_2 = obj->count(point);\n */","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"detect-squares"}