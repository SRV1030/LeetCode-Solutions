{"id":591772082,"lang":"cpp","time":"3 months, 2 weeks","timestamp":1637719402,"status_display":"Accepted","runtime":"421 ms","url":"/submissions/detail/591772082/","is_pending":"Not Pending","title":"Detect Squares","memory":"93.8 MB","code":"class DetectSquares {\npublic:\n        unordered_map<int, map<int, int>> mp;\n    DetectSquares() {\n        \n    }\n    \n    void add(vector<int> point) {\n        mp[point[1]][point[0]] += 1;\n    }\n    \n    int count(vector<int> point) {\n        int ans = 0;\n        int px = point[0], py = point[1];\n        for(auto it = mp[py].begin(); it != mp[py].end(); it++){\n            if(it->first == px)\n                continue;\n            int x = it->first;\n            int len = abs(x - px);\n            if(py - len >= 0){\n                ans += it->second * mp[py - len][x] * mp[py - len][px];\n            }\n            if(py + len <= 1000){\n                ans += it->second * mp[py + len][x] * mp[py + len][px];\n            }\n        }\n        return ans;\n    }\n};\n\n/**\n * Your DetectSquares object will be instantiated and called as such:\n * DetectSquares* obj = new DetectSquares();\n * obj->add(point);\n * int param_2 = obj->count(point);\n */","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"detect-squares"}