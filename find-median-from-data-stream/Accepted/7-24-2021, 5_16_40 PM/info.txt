{"id":527482849,"lang":"cpp","time":"7 months, 3 weeks","timestamp":1627126300,"status_display":"Accepted","runtime":"292 ms","url":"/submissions/detail/527482849/","is_pending":"Not Pending","title":"Find Median from Data Stream","memory":"117.1 MB","code":"class MedianFinder {\npublic: priority_queue<int>mxhp;\n        priority_queue<int,vector<int>,greater<int>>mnhp;\n    /** initialize your data structure here. */\n    MedianFinder() {\n        \n    }\n    \n    void addNum(int num) {\n        if(mxhp.empty())mxhp.push(num);\n        else{\n            if(num>mxhp.top()){\n                if(mxhp.size()==mnhp.size()){\n                    mnhp.push(num);\n                    int x=mnhp.top();\n                    mnhp.pop();\n                    mxhp.push(x);\n                }\n                else mnhp.push(num);                \n            }\n            else{\n                if(mxhp.size()>mnhp.size()){\n                    mxhp.push(num);\n                    int x=mxhp.top();\n                    mxhp.pop();\n                    mnhp.push(x);\n                }\n                else mxhp.push(num);         \n            }\n        }\n    }\n    \n    double findMedian() {\n        if((mxhp.size()+mnhp.size())%2) return mxhp.top();\n        else return (mnhp.top()+mxhp.top())/2.0;\n    }\n};\n\n/**\n * Your MedianFinder object will be instantiated and called as such:\n * MedianFinder* obj = new MedianFinder();\n * obj->addNum(num);\n * double param_2 = obj->findMedian();\n */","compare_result":"111111111111111111111","title_slug":"find-median-from-data-stream"}