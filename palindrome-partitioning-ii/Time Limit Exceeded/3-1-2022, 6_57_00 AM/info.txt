{"id":650892631,"lang":"cpp","time":"1 week, 6 days","timestamp":1646097120,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/650892631/","is_pending":"Not Pending","title":"Palindrome Partitioning II","memory":"N/A","code":"class Solution {\npublic:\n    int dp[2001][2001];\n    bool isPal(string s,int i,int j){\n        while(i<=j)\n            if(s[i++]!=s[j--]) return false;\n        return true;\n    }\n    int solve(string s,int i,int j){\n        if(i>=j || isPal(s,i,j)) return 0;\n        if(dp[i][j]!=-1) return dp[i][j];\n        int mn=INT_MAX;\n        for(int k=i;k<j;k++){\n            int t=1+solve(s,i,k)+solve(s,k+1,j);\n            if(mn>t)mn=t;\n        }\n        return dp[i][j]=mn;\n    }\n    int minCut(string s) {\n        memset(dp,-1,sizeof(dp));\n        return solve(s,0,s.size()-1);\n    }\n};","compare_result":"111111111111111111111110000000000000","title_slug":"palindrome-partitioning-ii"}