{"id":650896107,"lang":"cpp","time":"1 week, 6 days","timestamp":1646097636,"status_display":"Accepted","runtime":"380 ms","url":"/submissions/detail/650896107/","is_pending":"Not Pending","title":"Palindrome Partitioning II","memory":"24 MB","code":"class Solution {\npublic:\n    int dp[2001][2001];\n    bool isPal(string &s,int i,int j){\n        while(i<=j)\n            if(s[i++]!=s[j--]) return false;\n        return true;\n    }\n    int solve(string &s,int i,int j){        \n        if(i>=j) return 0;        \n        if(dp[i][j]!=-1) return dp[i][j];\n        if(isPal(s,i,j)) return dp[i][j]=0;\n        int mn=INT_MAX;\n        for(int k=i;k<j;k++){\n            if(!isPal(s,i,k)) continue;\n            int t=1+solve(s,i,k)+solve(s,k+1,j);\n            if(mn>t)mn=t;\n        }\n        return dp[i][j]=mn;\n    }\n    int minCut(string s) {\n        memset(dp,-1,sizeof(dp));\n        return solve(s,0,s.size()-1);\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"palindrome-partitioning-ii"}