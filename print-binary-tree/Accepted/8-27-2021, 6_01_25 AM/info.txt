{"id":544831619,"lang":"cpp","time":"6 months, 2 weeks","timestamp":1630023385,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/544831619/","is_pending":"Not Pending","title":"Print Binary Tree","memory":"8.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<string>> ans;\n    int ht(TreeNode* root){\n        if(!root) return 0;\n        return 1+max(ht(root->left),ht(root->right));\n    }\n    void util(TreeNode* root,int r,int l,int h){\n        if(!root) return;\n        int m=l+(h-l)/2;\n        ans[r][m]=to_string(root->val);\n        util(root->left,r+1,l,m-1);\n        util(root->right,r+1,m+1,h);\n    }\n    vector<vector<string>> printTree(TreeNode* root) {\n        if(!root) return ans;\n        int r=ht(root),c=(1<<r)-1;\n        ans=vector<vector<string>>(r,vector<string>(c,\"\"));\n        util(root,0,0,c);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"print-binary-tree"}