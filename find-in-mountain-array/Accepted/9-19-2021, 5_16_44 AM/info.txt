{"id":557202179,"lang":"cpp","time":"5 months, 3 weeks","timestamp":1632007904,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/557202179/","is_pending":"Not Pending","title":"Find in Mountain Array","memory":"7.1 MB","code":"/**\n * // This is the MountainArray's API interface.\n * // You should not implement it, or speculate about its implementation\n * class MountainArray {\n *   public:\n *     int get(int index);\n *     int length();\n * };\n */\n\nclass Solution {\npublic:\n    int bnpeak(MountainArray &marr){\n        int l=0,r=marr.length()-1;\n        while(l<=r){\n            int m=l+(r-l)/2;\n            if(m-1>=0 && m+1<marr.length() && (marr.get(m-1)<marr.get(m) && marr.get(m)>marr.get(m+1))) return m;\n            else if(m-1>=0 && marr.get(m-1)>marr.get(m))r=m-1;\n            else l=m+1;\n        }\n        return -1;\n    }\n    int bnsearchlft(MountainArray &marr,int l,int r,int k){\n        \n        cout<<k<<\"\\n\";\n        while(l<=r){\n            int m=l+(r-l)/2;\n            if(marr.get(m)==k) return m;\n            else if(marr.get(m)>k) r=m-1;\n            else l=m+1;\n        }\n        return -1;\n    }\n    int bnsearchrt(MountainArray &marr,int l,int r,int k){\n        while(l<=r){\n            int m=l+(r-l)/2;\n            if(marr.get(m)==k) return m;\n            else if(marr.get(m)>k) l=m+1;\n            else r=m-1;\n        }\n        return -1;\n    }\n    int findInMountainArray(int target, MountainArray &mountainArr) {\n        int peakInd=bnpeak(mountainArr),mx=mountainArr.get(peakInd);\n        if(mx==target) return peakInd;\n        else if(mx<target) return -1;\n        int bnlft=bnsearchlft(mountainArr,0,peakInd,target);\n        int bnrt=bnsearchrt(mountainArr,peakInd,mountainArr.length()-1,target);\n        if(bnlft!=-1 && bnrt!=-1) return min(bnlft,bnrt);\n        else return bnlft!=-1?bnlft:bnrt;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-in-mountain-array"}