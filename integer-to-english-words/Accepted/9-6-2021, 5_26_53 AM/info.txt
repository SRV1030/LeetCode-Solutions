{"id":550095341,"lang":"cpp","time":"6 months, 1 week","timestamp":1630885313,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/550095341/","is_pending":"Not Pending","title":"Integer to English Words","memory":"7.3 MB","code":"class Solution {\npublic:\n    vector<string> things = {\"\", \"\", \"Thousand\", \"Million\", \"Billion\"};\n    vector<string> ones = {\"\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"}; \n    vector<string> tens = {\"\", \"Ten\", \"Twenty\", \"Thirty\", \"Forty\", \"Fifty\", \"Sixty\", \"Seventy\", \"Eighty\", \"Ninety\"};\n    vector<string> specials = {\"Ten\", \"Eleven\", \"Twelve\", \"Thirteen\", \"Fourteen\", \"Fifteen\", \"Sixteen\", \"Seventeen\", \"Eighteen\", \"Nineteen\"};\n  \n    const string HUNDRED = \"Hundred\";\n  \n    string small(int no) {\n      if(no >= 1 && no <= 9) return ones[no];\n      if(no >= 10 && no <= 19) return specials[no%10]; \n      if(no <= 99) {\n        int d = no / 10;\n        return tens[d] + (no % 10 ? (\" \" + small(no%10)) : \"\");\n      }\n      int d = no / 100;\n      return ones[d] + \" \" + HUNDRED + (no % 100 ? (\" \" + small(no%100)) : \"\");\n    }\n  \n    string big(int no, int c) {\n      if(no == 0) return \"\";\n      string ans = big(no/1000, c+1);\n      int rem = no % 1000;\n      if(rem != 0) {\n        ans += (!ans.empty() ? \" \" :\"\" ) + small(rem) + (c == 0 || c == 1 ? \"\" : \" \" ) + things[c];\n      }\n      return ans;\n    }\n  \n    string numberToWords(int num) {\n      if(num == 0) return \"Zero\";\n      return big(num, 1);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"integer-to-english-words"}