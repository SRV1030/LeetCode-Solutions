{"id":634778587,"lang":"cpp","time":"1Â month","timestamp":1644039125,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/634778587/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"13.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* merge(ListNode *a,ListNode *b){\n        if(!a) return b;\n        if(!b) return a;\n        if(a==b) return a;\n        ListNode *res=NULL;\n        if(a->val<=b->val){\n            res=a;\n            res->next=merge(a->next,b);\n        }\n        else{\n            res=b;\n            res->next=merge(a,b->next);\n        }\n        return res;\n    }\n    ListNode* mergeKLists(vector<ListNode*>& lists) {\n        int n=lists.size();\n        if(n==0) return NULL;\n        if(n==1) return lists[0];\n        vector<ListNode*> v;\n        int i=0,j=n-1;\n        while(i<=j){\n            ListNode *x=merge(lists[i],lists[j]);\n            v.push_back(x);\n            i++;\n            j--;\n        }\n        return mergeKLists(v);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists"}