{"id":564250432,"lang":"cpp","time":"5 months, 1 week","timestamp":1633136668,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/564250432/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"21.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n#define li long long int\n\nbool val(TreeNode* root,li mn,li mx){\n    if(!root) return true;\n    if(root->val<=mn || root->val>=mx) return false;\n    return val(root->left,mn,root->val) && val(root->right,root->val,mx);\n}\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        return val(root,LONG_MIN,LONG_MAX);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree"}