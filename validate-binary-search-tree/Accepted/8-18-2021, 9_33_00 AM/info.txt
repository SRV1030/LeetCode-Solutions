{"id":540213532,"lang":"cpp","time":"6 months, 3 weeks","timestamp":1629258480,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/540213532/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"21.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool util(TreeNode*root,long mn,long mx){\n        if(!root) return 1;\n        if(root->val<=mn || root->val>=mx) return 0;\n        return util(root->left,mn,root->val)&&util(root->right,root->val,mx);\n        \n    }\n    bool isValidBST(TreeNode* root) {              \n        return util(root,-10000000007,10000000007);        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree"}