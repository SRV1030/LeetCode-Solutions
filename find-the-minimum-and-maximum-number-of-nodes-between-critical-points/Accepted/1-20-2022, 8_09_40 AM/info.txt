{"id":623617842,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1642645480,"status_display":"Accepted","runtime":"294 ms","url":"/submissions/detail/623617842/","is_pending":"Not Pending","title":"Find the Minimum and Maximum Number of Nodes Between Critical Points","memory":"113.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> nodesBetweenCriticalPoints(ListNode* head) {\n        if(!head || !head->next || !head->next->next)return {-1,-1};\n        ListNode* prv=head,*cur=prv->next,*nxt=cur->next;\n        int f=-1,pcp=-1,ncp=-1,ind=1,mnd=INT_MAX,mxd=INT_MIN;\n        while(nxt){\n            if((prv->val>cur->val && cur->val<nxt->val) || (prv->val<cur->val && cur->val>nxt->val)){\n                if(pcp==-1){\n                  pcp=ind; \n                    f=ind;\n                }  \n                else{\n                    ncp=ind;\n                    mnd=min(mnd,ncp-pcp);\n                    mxd=ncp-f;\n                    pcp=ncp;\n                }\n            }\n            ind++;\n            prv=cur;\n            cur=nxt;\n            nxt=nxt->next;\n        }\n        if(mxd==INT_MIN) return {-1,-1};\n        return {mnd,mxd};\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-minimum-and-maximum-number-of-nodes-between-critical-points"}