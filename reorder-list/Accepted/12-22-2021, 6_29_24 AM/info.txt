{"id":605243771,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1640133864,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/605243771/","is_pending":"Not Pending","title":"Reorder List","memory":"17.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:int c=0;\n    ListNode* rev(ListNode* head){\n        if(!head) return head;\n        ListNode* cur=head,*prev=NULL,*nxt;\n        while(cur){\n            nxt=cur->next;\n            cur->next=prev;\n            prev=cur;\n            cur=nxt;\n            c++;\n        }\n        return prev;\n    }\n    void reorderList(ListNode* head) {\n        if(!head || !head->next) return;\n        ListNode *cur=head,*bh=NULL,*half=head;\n        while(cur){\n            bh=half;\n            half=half->next;\n            cur=cur->next;\n            if(cur)cur=cur->next;\n        }\n        bh->next=NULL;\n        half=rev(half);\n        cur=head;\n        while(half){\n            ListNode* t=cur;\n            cur=cur->next;\n            t->next=half;      \n            half=half->next;            \n            t=t->next; \n            t->next=cur;\n        }\n    }\n};","compare_result":"111111111111","title_slug":"reorder-list"}