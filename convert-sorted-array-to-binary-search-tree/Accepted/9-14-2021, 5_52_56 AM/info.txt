{"id":554472535,"lang":"cpp","time":"6Â months","timestamp":1631578076,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/554472535/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"21.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* conv(vector<int>& nums,int l,int r){\n        if(r<l) return NULL;\n        int m=l+(r-l)/2;\n        TreeNode* root=new TreeNode(nums[m]);\n        root->left=conv(nums,l,m-1);\n        root->right=conv(nums,m+1,r);\n        return root;\n    }\n    TreeNode* sortedArrayToBST(vector<int>& nums) {\n        return conv(nums,0,nums.size()-1);\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree"}