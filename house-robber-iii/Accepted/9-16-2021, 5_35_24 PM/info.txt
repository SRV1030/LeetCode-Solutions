{"id":555884934,"lang":"cpp","time":"5 months, 4 weeks","timestamp":1631793024,"status_display":"Accepted","runtime":"30 ms","url":"/submissions/detail/555884934/","is_pending":"Not Pending","title":"House Robber III","memory":"25.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic: unordered_map<TreeNode* ,pair<int,int>>mp;\n    void util(TreeNode* root){\n        if(!root) return;\n        rob(root->left);\n        rob(root->right);\n        if(!root->left && !root->right) mp[root]={root->val,0};\n        else{\n            int l1=0,l2=0,r1=0,r2=0;\n            if(root->left){\n                l1=mp[root->left].first;\n                l2=mp[root->left].second;\n            }\n            if(root->right){\n                r1=mp[root->right].first;\n                r2=mp[root->right].second;\n            }\n            mp[root]={root->val+l2+r2,max(l1,l2)+max(r1,r2)};\n        }\n    }\n    int rob(TreeNode* root) {\n        util(root);\n        return max(mp[root].first,mp[root].second);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"house-robber-iii"}