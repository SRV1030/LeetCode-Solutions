{"id":555880797,"lang":"cpp","time":"5 months, 4 weeks","timestamp":1631792188,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/555880797/","is_pending":"Not Pending","title":"House Robber III","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int rob(TreeNode* root) {\n        // if(!root->left && !root->right) return root->val;\n        vector<int>v={0,root->val};\n        queue<TreeNode*>q;\n        if(root->left)q.push(root->left);\n        if(root->right)q.push(root->right);\n        while(!q.empty()){\n            int n=q.size(),sz=v.size(),s=0;\n            while(n--){\n                TreeNode* t=q.front();\n                q.pop();\n                s+=t->val;\n                if(t->left)q.push(t->left);\n                if(t->right)q.push(t->right);                \n            }\n            v.push_back(max(s+v[sz-2],v[sz-1]));\n        }\n        return v.back();        \n    }\n};","compare_result":"1111111111111111110111111111111101110111111111111111110110111111111001010000000000000000000000000000000000000000000000000000","title_slug":"house-robber-iii"}