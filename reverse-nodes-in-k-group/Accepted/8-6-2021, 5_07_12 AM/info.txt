{"id":533953211,"lang":"cpp","time":"7Â months, 1Â week","timestamp":1628205732,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/533953211/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"11.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    int count(ListNode* head){\n        ListNode* p=head;\n        int c=0;\n        while(p){\n            c++;\n            p=p->next;\n        }\n        return c;\n    }\n    ListNode* reverse(ListNode* head, int k,int rem){\n        if(rem<k) return head;\n        ListNode* cur=head,*nxt=NULL,*prv=NULL; \n        int c=0;\n        while(cur && c<k){\n            nxt=cur->next;\n            cur->next=prv;\n            prv=cur;\n            cur=nxt;     \n            c++;\n        }\n        if(nxt)head->next=reverse(nxt,k,rem-k);\n        return prv;\n    }\n    ListNode* reverseKGroup(ListNode* head, int k) {\n        return reverse(head,k,count(head));\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-nodes-in-k-group"}