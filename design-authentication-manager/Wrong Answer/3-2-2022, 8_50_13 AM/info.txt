{"id":651622585,"lang":"cpp","time":"1 week, 4 days","timestamp":1646190313,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/651622585/","is_pending":"Not Pending","title":"Design Authentication Manager","memory":"N/A","code":"class AuthenticationManager {\npublic:\n    unordered_map<string,int>mp;\n    int tt;\n    AuthenticationManager(int timeToLive) {\n        tt=timeToLive;\n    }\n    \n    void generate(string tokenId, int currentTime) {\n        mp[tokenId]=currentTime+tt;\n    }\n    \n    void renew(string tokenId, int currentTime) {\n        if(mp.count(tokenId)){\n            if(mp[tokenId]<currentTime)mp.erase(tokenId);\n            else mp[tokenId]=currentTime+tt;\n        }\n    }\n    \n    int countUnexpiredTokens(int currentTime) {\n        if(mp.empty()) return 0;\n        int c=0;\n        for (auto&[k,v]:mp){\n              if (v>currentTime)  c++;\n        }\n        return c;\n    }\n};\n\n/**\n * Your AuthenticationManager object will be instantiated and called as such:\n * AuthenticationManager* obj = new AuthenticationManager(timeToLive);\n * obj->generate(tokenId,currentTime);\n * obj->renew(tokenId,currentTime);\n * int param_3 = obj->countUnexpiredTokens(currentTime);\n */","compare_result":"111111111111111111111111111111111111111111111111111111111110111111111111111111111111111110","title_slug":"design-authentication-manager"}