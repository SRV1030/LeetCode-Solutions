{"id":651624694,"lang":"cpp","time":"1 week, 4 days","timestamp":1646190557,"status_display":"Accepted","runtime":"144 ms","url":"/submissions/detail/651624694/","is_pending":"Not Pending","title":"Design Authentication Manager","memory":"30.2 MB","code":"class AuthenticationManager {\npublic:\n    int timeToLive;\n    unordered_map<string,int>m;\n    AuthenticationManager(int time) {\n        timeToLive=time;\n    }\n    \n    void generate(string t, int c) {\n        m[t]=c;\n    }\n    \n    void renew(string t, int c) {\n        if(m.count(t)){\n            if(m[t]+timeToLive>c)\n            m[t]=c;\n        }\n    }\n    \n    int countUnexpiredTokens(int cT) {\n        int ans=0;\n        for(auto [i,j]:m){\n            if(j+timeToLive>cT)ans++;\n        }\n        return ans;\n    }\n};\n\n/**\n * Your AuthenticationManager object will be instantiated and called as such:\n * AuthenticationManager* obj = new AuthenticationManager(timeToLive);\n * obj->generate(tokenId,currentTime);\n * obj->renew(tokenId,currentTime);\n * int param_3 = obj->countUnexpiredTokens(currentTime);\n */","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"design-authentication-manager"}