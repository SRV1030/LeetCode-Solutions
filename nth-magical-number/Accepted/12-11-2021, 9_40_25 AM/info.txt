{"id":600056032,"lang":"cpp","time":"3Â months","timestamp":1639194925,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/600056032/","is_pending":"Not Pending","title":"Nth Magical Number","memory":"5.8 MB","code":"class Solution {\npublic:\n    int MOD=1e9+7;\n    int gcd(int x, int y) {\n        if (x == 0) return y;\n        return gcd(y % x, x);\n    }    \n    int lcm(int a,int b){\n        return (a/gcd(a,b))*b;\n    }\n    int nthMagicalNumber(int N, int A, int B) {\n        int MOD = 1e9 + 7;\n        int L = A / gcd(A, B) * B;\n\n        long lo = 0;\n        long hi = (long) N * min(A, B);\n        while (lo < hi) {\n            long mi = lo + (hi - lo) / 2;\n            // If there are not enough magic numbers below mi...\n            if (mi / A + mi / B - mi / L < N)\n                lo = mi + 1;\n            else\n                hi = mi;\n        }\n\n        return (int) (lo % MOD);\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"nth-magical-number"}