{"id":564765454,"lang":"cpp","time":"5 months, 1 week","timestamp":1633220691,"status_display":"Accepted","runtime":"140 ms","url":"/submissions/detail/564765454/","is_pending":"Not Pending","title":"Maximum Sum BST in Binary Tree","memory":"101.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nstruct check{\n    bool isbst;\n    int s;\n    int mn;\n    int mx;\n};\nclass Solution {\npublic:\n    int mxs=0;\n    check util(TreeNode* root){\n        if(!root) return {true,0,INT_MAX,INT_MIN};\n        check lt=util(root->left),rt=util(root->right);\n        check cur;\n        cur.mn=min(root->val,min(lt.mn,rt.mn));\n        cur.mx=max(root->val,max(lt.mx,rt.mx));\n        if(lt.isbst && rt.isbst && lt.mx<root->val && root->val<rt.mn){\n            cur.isbst=true;\n            cur.s=root->val+lt.s+rt.s;\n            if(cur.s>mxs)mxs=cur.s;\n        }\n        else{\n            cur.isbst=false;\n            cur.s=max(lt.s,rt.s);\n        }\n        return cur;\n    }\n    int maxSumBST(TreeNode* root) {\n        util(root);\n        return mxs;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-sum-bst-in-binary-tree"}