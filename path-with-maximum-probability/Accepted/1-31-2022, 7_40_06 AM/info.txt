{"id":631293432,"lang":"cpp","time":"1 month, 1 week","timestamp":1643594106,"status_display":"Accepted","runtime":"354 ms","url":"/submissions/detail/631293432/","is_pending":"Not Pending","title":"Path with Maximum Probability","memory":"66.1 MB","code":"class Solution {\npublic:\n    double maxProbability(int n, vector<vector<int>>& edges, vector<double>& succProb, int start, int end) {\n        vector<vector<pair<int,double>>>g(n);\n        for(int i=0;i<edges.size();i++){\n            g[edges[i][0]].push_back({edges[i][1],succProb[i]});\n            g[edges[i][1]].push_back({edges[i][0],succProb[i]});\n        }\n        \n        vector<double>prob(n,0.0);\n        prob[start]=1.0;\n        priority_queue<pair<double,int>>pq;\n        pq.push({1.0,start});\n        while(!pq.empty()){\n            int ne=pq.top().second;\n            pq.pop();\n            for(auto&e:g[ne]){\n                if(prob[ne]*e.second>prob[e.first]){\n                    prob[e.first]=prob[ne]*e.second;\n                    pq.push({prob[e.first],e.first});\n                }\n            }\n        }\n        return prob[end];\n    }\n};","compare_result":"1111111111111111","title_slug":"path-with-maximum-probability"}