{"id":631289259,"lang":"cpp","time":"1 month, 1 week","timestamp":1643593511,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/631289259/","is_pending":"Not Pending","title":"Path with Maximum Probability","memory":"N/A","code":"class Solution {\npublic:\n    double mx=0.0;\n    void dfs(vector<vector<pair<int,double>>>&g,vector<int>&vis,int ne,double prob,int end){\n        if(ne==end){\n            mx=max(mx,prob);\n            return;\n        }\n        vis[ne]=1;\n        for(auto&i:g[ne])\n            if(!vis[i.first]) dfs(g,vis,i.first,prob*i.second,end);        \n    }\n    double maxProbability(int n, vector<vector<int>>& edges, vector<double>& succProb, int start, int end) {\n        vector<vector<pair<int,double>>>g(n);\n        for(int i=0;i<edges.size();i++){\n            g[edges[i][0]].push_back({edges[i][1],succProb[i]});\n            g[edges[i][1]].push_back({edges[i][0],succProb[i]});\n        }\n        \n        for(auto&i:g[start]){\n            vector<int>vis(n);\n            vis[start]=1;\n            dfs(g,vis,i.first,i.second,end);\n        }\n        return mx;\n    }\n};","compare_result":"1111111110000000","title_slug":"path-with-maximum-probability"}