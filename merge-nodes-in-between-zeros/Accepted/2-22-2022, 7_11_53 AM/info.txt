{"id":646387502,"lang":"cpp","time":"2 weeks, 6 days","timestamp":1645493213,"status_display":"Accepted","runtime":"1033 ms","url":"/submissions/detail/646387502/","is_pending":"Not Pending","title":"Merge Nodes in Between Zeros","memory":"274.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeNodes(ListNode* head) {\n        ListNode* ans=new ListNode(0),*h=ans;\n        head=head->next;\n        int s=0;\n        while(head){\n            if(!head->val){\n                ans->next=new ListNode(s);\n                s=0;\n                ans=ans->next;\n            }\n            else s+=head->val;\n            head=head->next;\n        }\n        return h->next;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"merge-nodes-in-between-zeros"}