{"id":530385783,"lang":"cpp","time":"7 months, 2 weeks","timestamp":1627607927,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/530385783/","is_pending":"Not Pending","title":"Binary Tree Tilt","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic: int res=0;\n    int util(TreeNode* root){\n        if(!root) return 0;\n        int l=util(root->left);\n        int r=util(root->right);\n        res=abs(l-r);  \n        return l+r+root->val;      \n    }\n    int findTilt(TreeNode* root) {\n        util(root);\n        return res;\n    }\n};\n","compare_result":"10010001111111000001000000000001000000000000001000000000000000000000000000000","title_slug":"binary-tree-tilt"}