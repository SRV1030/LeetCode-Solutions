{"id":598586911,"lang":"cpp","time":"3Â months","timestamp":1638924824,"status_display":"Accepted","runtime":"31 ms","url":"/submissions/detail/598586911/","is_pending":"Not Pending","title":"Binary Tree Tilt","memory":"23.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic: int res=0;\n    int util(TreeNode* root){\n        if(!root) return 0;\n        int l=util(root->left);\n        int r=util(root->right);\n        res+=abs(l-r);  \n        return l+r+root->val;      \n    }\n    int findTilt(TreeNode* root) {\n        util(root);\n        return res;\n    }\n};\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-tilt"}