{"id":552351584,"lang":"cpp","time":"6Â months","timestamp":1631239298,"status_display":"Accepted","runtime":"84 ms","url":"/submissions/detail/552351584/","is_pending":"Not Pending","title":"Insert into a Binary Search Tree","memory":"57 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* insertIntoBST(TreeNode* root, int val) {\n        if(!root)return new TreeNode(val);\n        if(root->val>val)root->left=insertIntoBST(root->left,val);\n        else root->right=insertIntoBST(root->right,val);\n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111","title_slug":"insert-into-a-binary-search-tree"}