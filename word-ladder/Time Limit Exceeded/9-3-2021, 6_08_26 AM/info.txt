{"id":548619621,"lang":"cpp","time":"6 months, 1 week","timestamp":1630628606,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/548619621/","is_pending":"Not Pending","title":"Word Ladder","memory":"N/A","code":"class Solution {\npublic:\n    bool isCon(string a,string b){\n        int c=0;\n        for(int i=0;i<a.length();i++){\n            if(a[i]!=b[i])\n                c++;\n            if(c>=2)\n                return 0;\n        }\n        return c==0 ? 0 : 1;\n    }\n    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {              \n        wordList.insert(wordList.begin(),beginWord);  \n        auto e=find(wordList.begin(),wordList.end(),endWord);\n        if(e==wordList.end()) return 0;\n        int n=wordList.size(),end=e-wordList.begin();\n        vector<vector<int>>g(n);\n        vector<int>dis(n,INT_MAX);\n        dis[0]=0;\n        queue<int>q;\n        q.push(0);\n        for(int i=0;i<n-1;i++)\n            for(int j=1;j<n;j++)\n                if(isCon(wordList[i],wordList[j])){\n                    g[i].push_back(j);\n                    g[j].push_back(i);\n                }\n        while(!q.empty()){\n            int src=q.front();\n            q.pop();\n            for(auto& i:g[src])\n                if(dis[src]+1<dis[i]){\n                    dis[i]=dis[src]+1;\n                    q.push(i);\n                }\n        }\n        return dis[end]==INT_MAX?0:dis[end]+1;\n    }\n};","compare_result":"1111111111111111111111111111111111110000000000000","title_slug":"word-ladder"}