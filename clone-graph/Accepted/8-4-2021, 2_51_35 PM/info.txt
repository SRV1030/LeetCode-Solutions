{"id":533108285,"lang":"cpp","time":"7 months, 1 week","timestamp":1628067995,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/533108285/","is_pending":"Not Pending","title":"Clone Graph","memory":"8.8 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    vector<Node*> neighbors;\n    Node() {\n        val = 0;\n        neighbors = vector<Node*>();\n    }\n    Node(int _val) {\n        val = _val;\n        neighbors = vector<Node*>();\n    }\n    Node(int _val, vector<Node*> _neighbors) {\n        val = _val;\n        neighbors = _neighbors;\n    }\n};\n*/\n\nclass Solution {\npublic:\n    void dfs(Node* copy,Node* node,vector<Node*> &vis){\n        vis[copy->val]=copy;\n        for(auto i:node->neighbors){\n            if(!vis[i->val]){\n               Node *cpy=new Node(i->val); \n               (copy->neighbors).push_back(cpy);\n               dfs(cpy,i,vis);\n            }\n            else (copy->neighbors).push_back(vis[i->val]);\n        }\n    }\n    Node* cloneGraph(Node* node) {\n        if(!node) return NULL;\n        vector<Node*>vis(101,NULL);\n        Node *copy=new Node(node->val);\n        dfs(copy,node,vis);\n        return copy;\n    }\n};","compare_result":"1111111111111111111111","title_slug":"clone-graph"}