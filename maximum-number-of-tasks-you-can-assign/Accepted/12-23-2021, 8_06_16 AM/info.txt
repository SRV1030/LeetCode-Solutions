{"id":605774272,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1640226076,"status_display":"Accepted","runtime":"968 ms","url":"/submissions/detail/605774272/","is_pending":"Not Pending","title":"Maximum Number of Tasks You Can Assign","memory":"282.1 MB","code":"class Solution {\nprivate:\n    bool isValid(vector<int>& tasks, vector<int>& workers, const int& MAX_TASKS, int pills, int strength){\n        multiset<int> workersMultiset(workers.end() - MAX_TASKS, workers.end());\n        for(int i = MAX_TASKS - 1; i >= 0; --i){\n            auto it = workersMultiset.lower_bound(tasks[i]);\n            if(it == workersMultiset.end()){\n                pills -= 1;\n                it = workersMultiset.lower_bound(tasks[i] - strength);\n            }\n            if(it == workersMultiset.end() || pills < 0){\n                return false;\n            }\n            workersMultiset.erase(it);\n        }\n        return true;\n    }\n    \npublic:\n    int maxTaskAssign(vector<int>& tasks, vector<int>& workers, int pills, int strength) {\n        const int T = tasks.size();\n        const int W = workers.size();\n        \n        sort(tasks.begin(), tasks.end());\n        sort(workers.begin(), workers.end());\n        \n        int l = 0;\n        int r = min(T, W);\n        while(l != r){\n            int mid = (l + r + 1) / 2;\n            if(isValid(tasks, workers, mid, pills, strength)){\n                l = mid;\n            }else{\n                r = mid - 1;\n            }\n        }\n        \n        return r;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"maximum-number-of-tasks-you-can-assign"}