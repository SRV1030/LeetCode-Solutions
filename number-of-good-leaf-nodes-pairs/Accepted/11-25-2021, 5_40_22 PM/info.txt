{"id":592456749,"lang":"cpp","time":"3 months, 2 weeks","timestamp":1637841322,"status_display":"Accepted","runtime":"81 ms","url":"/submissions/detail/592456749/","is_pending":"Not Pending","title":"Number of Good Leaf Nodes Pairs","memory":"34.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int ans=0;\n    vector<int> count(TreeNode* root, int d){\n        if(!root) return{};\n        if(!root->left && ! root->right) return {1};\n        vector<int>lt=count(root->left,d),rt=count(root->right,d),res;\n        for(auto& l:lt)\n            for(auto&r:rt)if(l+r<=d) ans++;\n        for(auto& l:lt) if(l+1<=d)res.push_back(l+1);\n        for(auto& r:rt) if(r+1<=d)res.push_back(r+1);\n        return res;\n    }\n    int countPairs(TreeNode* root, int distance) {\n        count(root,distance);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-good-leaf-nodes-pairs"}