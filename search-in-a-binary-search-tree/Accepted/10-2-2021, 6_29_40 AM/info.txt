{"id":564245426,"lang":"cpp","time":"5 months, 1 week","timestamp":1633135480,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/564245426/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"34.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* searchBST(TreeNode* root, int val) {\n        if(!root) return NULL;\n        if(root->val==val) return root;\n        if(root->val<val) return searchBST(root->right,val);\n        else return searchBST(root->left,val);\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree"}