{"id":543824563,"lang":"cpp","time":"6 months, 2 weeks","timestamp":1629870759,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/543824563/","is_pending":"Not Pending","title":"Design Circular Queue","memory":"N/A","code":"class MyCircularQueue {\npublic: int s,f,r,*q;\n    MyCircularQueue(int k) {\n        s=k-1;\n        f=r=-1;\n        q=new int[k];\n    }\n    \n    bool enQueue(int value) {\n        if((f==0 && r==s)|| (r==((f-1)%s))) return false;\n        if(f==-1){\n            f=r=0;\n            q[r]=value;\n        }\n        else{\n            r=(r+1)%(s+1);\n            q[r]=value;\n        }\n        return true;\n    }\n    \n    bool deQueue() {\n        if(f==-1) return false;\n        q[f]=-1;\n        if(f==r)f=r=-1;\n        else f=(f+1)%(s+1);\n        return true;\n    }\n    \n    int Front() {\n       if(f==-1) return false;\n        return q[f];\n    }\n    \n    int Rear() {\n        if(r==-1) return false;\n        return q[r];\n    }\n    \n    bool isEmpty() {\n        return r==-1;\n    }\n    \n    bool isFull() {\n        return (f==0 && r==s)|| (r==(f%s));\n    }\n};\n\n/**\n * Your MyCircularQueue object will be instantiated and called as such:\n * MyCircularQueue* obj = new MyCircularQueue(k);\n * bool param_1 = obj->enQueue(value);\n * bool param_2 = obj->deQueue();\n * int param_3 = obj->Front();\n * int param_4 = obj->Rear();\n * bool param_5 = obj->isEmpty();\n * bool param_6 = obj->isFull();\n */","compare_result":"101001001010110101000110111011111010011011100101111000000","title_slug":"design-circular-queue"}