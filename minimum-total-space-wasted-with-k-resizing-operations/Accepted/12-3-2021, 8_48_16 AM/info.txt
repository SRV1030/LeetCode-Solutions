{"id":596193271,"lang":"cpp","time":"3 months, 1 week","timestamp":1638500596,"status_display":"Accepted","runtime":"248 ms","url":"/submissions/detail/596193271/","is_pending":"Not Pending","title":"Minimum Total Space Wasted With K Resizing Operations","memory":"10 MB","code":"class Solution {\npublic:\n    vector<vector<int>>dp;\n    int MXC=1e9+7;\n    int solve(int i,int k,int n,vector<int> &nums){\n        if(i==n) return 0;\n        if(k<0) return MXC;\n        if(dp[i][k]!=-1) return dp[i][k];\n        int mxr=0,sr=0,cost=MXC;\n        for(int j=i;j<n;j++){\n            mxr=max(mxr,nums[j]);\n            sr+=nums[j];\n            cost=min(cost,mxr*(j-i+1)-sr+solve(j+1,k-1,n,nums));\n        }\n        return dp[i][k]=cost;\n    }\n    int minSpaceWastedKResizing(vector<int>& nums, int k) {\n        int n=nums.size();\n        dp=vector<vector<int>>(n+1,vector<int>(k+1,-1));\n        return solve(0,k,n,nums);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-total-space-wasted-with-k-resizing-operations"}