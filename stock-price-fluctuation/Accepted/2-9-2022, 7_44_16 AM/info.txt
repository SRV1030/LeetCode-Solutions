{"id":637542939,"lang":"cpp","time":"1Â month","timestamp":1644371956,"status_display":"Accepted","runtime":"456 ms","url":"/submissions/detail/637542939/","is_pending":"Not Pending","title":"Stock Price Fluctuation ","memory":"168.7 MB","code":"class StockPrice {\npublic:\n    \n    int price;\n    multiset<int> m;\n    map<int, int> value;\n    int mx;\n    \n    StockPrice() {\n        price = 0;\n        mx = 0;\n    }\n    \n    void update(int timestamp, int p) {\n        price = p;\n        if ( value.count(timestamp) ) {\n            m.erase ( m.find(value[timestamp]) );\n        }\n        \n        m.insert ( price );\n        value[timestamp] = price;\n        mx = max (mx, timestamp);\n    }\n    \n    int current() {\n        return value[mx];\n    }\n    \n    int maximum() {\n        return *m.rbegin();\n    }\n    \n    int minimum() {\n        return *m.begin();\n    }\n};\n\n/**\n * Your StockPrice object will be instantiated and called as such:\n * StockPrice* obj = new StockPrice();\n * obj->update(timestamp,price);\n * int param_2 = obj->current();\n * int param_3 = obj->maximum();\n * int param_4 = obj->minimum();\n */","compare_result":"111111111111111111","title_slug":"stock-price-fluctuation"}