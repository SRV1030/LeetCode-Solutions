{"id":568633835,"lang":"cpp","time":"5Â months","timestamp":1633836268,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/568633835/","is_pending":"Not Pending","title":"Stock Price Fluctuation ","memory":"N/A","code":"class StockPrice {\npublic: int mn=INT_MAX,mx=INT_MIN,lc,lt,mxt=-1,mnt=-1;\n    unordered_map<int,int>mp;\n    StockPrice() {\n        mp.clear();\n    }\n    \n    void update(int timestamp, int price) {\n        if(mp.empty()){\n            mp[timestamp]=price;\n            lc=price;\n            mn=mx=price;\n            lt=mxt=mnt=timestamp;\n        }\n        else{\n            mp[timestamp]=price;\n            if(timestamp>=lt){\n                lt=timestamp;\n                lc=price;\n            }  \n            if(timestamp==mxt){\n                if(price>mx){\n                    mx=price;\n                    return;\n                }\n                int mxc=price,mnc=price,mxt=timestamp,mnt=timestamp;\n                for(auto&i:mp){\n                    if(i.second>mxc){\n                        mxc=i.second;\n                        mxt=i.first;\n                    }\n                    if(i.second<mnc){\n                        mnc==i.second;\n                        mnt=i.first;\n                    }\n                }                    \n                mx=mxc;\n                mn=mnc;\n            }\n            else if(timestamp==mnt){\n                if(price<mn){\n                    mn=price;\n                    return;\n                }\n                int mxc=price,mnc=price,mxt=timestamp,mnt=timestamp;\n                for(auto&i:mp){\n                    if(i.second>mxc){\n                        mxc=i.second;\n                        mxt=i.first;\n                    }\n                    if(i.second<mnc){\n                        mnc==i.second;\n                        mnt=i.first;\n                    }\n                }                    \n                mx=mxc;\n                mn=mnc;\n            }\n            else if(price<mn){\n                    mn=price;\n                    mnt=timestamp;\n                }\n            else if(price>mx){\n                    mx=price;\n                    mxt=timestamp;\n                }\n            }\n        \n    }\n    \n    int current() {\n        return lc;\n    }\n    \n    int maximum() {\n        return mx;\n    }\n    \n    int minimum() {\n        return mn;\n    }\n};\n\n/**\n * Your StockPrice object will be instantiated and called as such:\n * StockPrice* obj = new StockPrice();\n * obj->update(timestamp,price);\n * int param_2 = obj->current();\n * int param_3 = obj->maximum();\n * int param_4 = obj->minimum();\n */","compare_result":"11001011000000000","title_slug":"stock-price-fluctuation"}