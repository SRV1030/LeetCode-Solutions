{"id":626454499,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1642991969,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/626454499/","is_pending":"Not Pending","title":"Sequential Digits","memory":"6.2 MB","code":"// class Solution {\n// public:\n//     vector<int> sequentialDigits(int low, int high) {\n//         string l=to_string(low),h=to_string(high);\n//         string p=\"123456789\";\n//         int s=l.size(),e=h.size();\n//         vector<int> ans;\n//         for(int sz=s;sz<=e;sz++){\n//             for(int i=0;i+sz<10;i++){\n//                 int v=stoi(p.substr(i,sz));\n//                 if(v<low) continue;\n//                 if(v>high) return ans;\n//                 ans.push_back(v);\n//             }\n//         }\n//         return ans;\n//     }\n// };\n\nclass Solution {\npublic:\n\t// generating the sequence\n    void generate(int start, int inc,vector<int>& sequence){\n        while(start%10!=0){\n            sequence.push_back(start);\n            start += inc;\n        }\n    }\n    vector<int> sequentialDigits(int low, int high) {\n        vector<int> starts = {12,123,1234,12345,123456,1234567,12345678};\n        vector<int> increments = {11,111,1111,11111,111111,1111111,11111111};\n        vector<int> sequence;\n\t\t\n        for(int i = 0; i < increments.size(); i++){\n            generate(starts[i],increments[i],sequence);\n        }\n\t\t\n        vector<int> ans;\n        for(int i = 0; i < sequence.size(); i++){\n            if(sequence[i]>= low and sequence[i]<=high)\n                ans.push_back(sequence[i]);\n        }\n\t\t\n\t\t// The  start vector contains upto 8 digits only\n\t\t// so we are checking for the 9 digit also and only 123456789 satisfies the sequence\n        if(123456789<=high and 123456789>=low)\n            ans.push_back(123456789);\n\t\t\t\n        return ans;\n    }\n};","compare_result":"11111111111111111111111","title_slug":"sequential-digits"}