{"id":563744022,"lang":"cpp","time":"5 months, 2 weeks","timestamp":1633051168,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/563744022/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic: int mx=INT_MIN;\n    int mxd(TreeNode* root){\n        if(!root) return 0;\n        int l=mxd(root->left),r=mxd(root->right),v=l+r+root->val;\n        if(v>mx)mx=v;\n        return v;\n    }\n    int maxPathSum(TreeNode* root) {\n        mx=root->val;\n        mxd(root);\n        return mx;\n    }\n};","compare_result":"1111111111011111011001010111100111010100000100101000000100010010101100010010011110000000000000","title_slug":"binary-tree-maximum-path-sum"}