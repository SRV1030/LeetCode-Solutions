{"id":563747477,"lang":"cpp","time":"5 months, 2 weeks","timestamp":1633051778,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/563747477/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic: int mx=0;\n    int mxd(TreeNode* root){\n        if(!root) return 0;\n        int l=mxd(root->left),r=mxd(root->right),v=(l<0?0:l)+(r<0?0:r)+root->val;\n        if(v>mx)mx=v;\n        return root->val+max(l,r);\n    }\n    int maxPathSum(TreeNode* root) {\n        mxd(root);\n        return mx;\n    }\n};","compare_result":"1111011100111101111111111111111111111111111111111111110111111111111111101111111101111101111111","title_slug":"binary-tree-maximum-path-sum"}