{"id":528583633,"lang":"cpp","time":"7Â months, 2Â weeks","timestamp":1627306647,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/528583633/","is_pending":"Not Pending","title":"Add Two Numbers II","memory":"71.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    void Reverse( ListNode **headp){\n        ListNode *p=NULL,*c=*headp,*n=NULL;\n        while(c){\n            n=c->next;   \n            c->next=p;\n            p=c;  \n            c=n;\n        }\n        *headp=p;\n    }\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        Reverse(&l1);\n        Reverse(&l2);\n        ListNode* ans= new ListNode();\n        ListNode *head=ans;\n        int c=0;\n        while(l1 && l2){\n            int s=l1->val+l2->val+c;\n            if(s>9){\n                ListNode *temp=new ListNode(s%10);\n                ans->next=temp;               \n                c=1;\n            }\n            else{\n                ListNode *temp=new ListNode(s);\n                ans->next=temp;\n                c=0;\n            }\n            l1=l1->next;\n            l2=l2->next;\n            ans=ans->next;\n        }\n        while(l1){\n            int s=l1->val+c;\n            if(s>9){\n                ListNode *temp=new ListNode(s%10);\n                ans->next=temp;\n                c=1;\n            }\n            else{\n                // cout<<s<<\" \"\n                ListNode *temp=new ListNode(s);\n                ans->next=temp;\n                c=0;\n            }\n            l1=l1->next;\n             ans=ans->next;\n        }\n        while(l2){\n            int s=l2->val+c;\n            if(s>9){\n                ListNode *temp=new ListNode(s%10);\n                ans->next=temp;\n                c=1;\n            }\n            else{\n                ListNode *temp=new ListNode(s);\n                ans->next=temp;\n                c=0;\n            }\n            l2=l2->next;\n             ans=ans->next;\n        }\n        if(c){\n            ListNode *temp=new ListNode(1);\n                ans->next=temp;\n            ans=ans->next;\n        }\n        head=head->next;\n        Reverse(&head);\n        return head;\n    }\n};","compare_resulttitle_slug":"add-two-numbers-ii"}