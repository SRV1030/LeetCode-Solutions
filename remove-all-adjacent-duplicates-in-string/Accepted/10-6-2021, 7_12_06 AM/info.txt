{"id":566516044,"lang":"cpp","time":"5 months, 1 week","timestamp":1633483626,"status_display":"Accepted","runtime":"799 ms","url":"/submissions/detail/566516044/","is_pending":"Not Pending","title":"Remove All Adjacent Duplicates In String","memory":"408.4 MB","code":"// class Solution {\n// public:\n//     string removeDuplicates(string s) {\n//         stack<char>st;\n//         for(auto&i:s){\n//             bool f=0;\n//             while(!st.empty() && i==st.top()) {\n//                 st.pop();\n//                 f=1;\n//             }\n//             if(!f) st.push(i);\n//         }\n//         string ans;\n//         while(!st.empty()){\n//              ans+=st.top();\n//              st.pop();\n//          }\n//         reverse(ans.begin(),ans.end());\n//         return ans;\n//     }\n// };\nclass Solution {\npublic:\n    string removeDuplicates(string S) {\n        int runner = 0;\n        while(runner < ((int)S.size()) - 1){\n            if(S[runner] == S[runner + 1]){\n                int i = runner - 1, j = runner + 2;\n                for(;i >= 0 && j < S.size(); --i, ++j){\n                    if(S[i] != S[j]){\n                        break;\n                    }\n                }\n                \n                S = S.substr(0,i + 1) + (j < S.size() ? S.substr(j) : \"\");\n                runner = i >= 0;\n            }else{\n                runner++;\n            }\n            \n        }\n        \n        return S;\n    }\n    \n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-all-adjacent-duplicates-in-string"}