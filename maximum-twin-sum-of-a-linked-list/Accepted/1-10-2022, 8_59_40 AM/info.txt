{"id":616671972,"lang":"cpp","time":"2Â months","timestamp":1641784480,"status_display":"Accepted","runtime":"436 ms","url":"/submissions/detail/616671972/","is_pending":"Not Pending","title":"Maximum Twin Sum of a Linked List","memory":"116.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* rev(ListNode *head){\n        ListNode*cur=head,*prev=NULL,*nxt=NULL;\n        while(cur){\n            nxt=cur->next;\n            cur->next=prev;\n            prev=cur;\n            cur=nxt;\n        }\n        return prev;\n    }\n    int pairSum(ListNode* head) {\n        ListNode*f=head->next,*s=head;\n        while(f && f->next){\n            s=s->next;\n            f=f->next->next;\n        }\n        ListNode *pm=head,*sec=s->next;\n        s->next=NULL;\n        sec=rev(sec);\n        int mx=0;\n        while(pm && sec){\n            int x=pm->val+sec->val;\n            if(x>mx)mx=x;\n            pm=pm->next;\n            sec=sec->next;\n        }\n        return mx;        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"maximum-twin-sum-of-a-linked-list"}