{"id":541216314,"lang":"cpp","time":"6 months, 3 weeks","timestamp":1629426040,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/541216314/","is_pending":"Not Pending","title":"Reverse Linked List II","memory":"7.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseBetween(ListNode* head, int left, int right) {\n        if(!head || !head->next) return head;\n        ListNode* cur=head,*prev=NULL,*nxt;\n        int c=0;\n        while(cur){\n            if(++c==left){\n                ListNode *rtail=prev,*lhead=cur;\n                while(c<=right){\n                    nxt=cur->next;\n                    cur->next=prev;\n                    prev=cur;\n                    cur=nxt;\n                    c++;\n                }\n                if(rtail==NULL) head=prev;\n                else rtail->next=prev;\n                lhead->next=cur;\n                return head;                \n            }\n            prev=cur;\n            cur=cur->next;\n        }\n        return head;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111","title_slug":"reverse-linked-list-ii"}