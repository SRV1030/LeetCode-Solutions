{"id":658159613,"lang":"cpp","time":"2Â days","timestamp":1647049843,"status_display":"Accepted","runtime":"50 ms","url":"/submissions/detail/658159613/","is_pending":"Not Pending","title":"Knight Probability in Chessboard","memory":"9.2 MB","code":"class Solution {\npublic:\n    double knightProbability(int n, int k, int r, int c) {\n        vector<vector<double>>v1(n,vector<double>(n,0));\n        v1[r][c]=1;\n        int dx[]={2,2,1,1,-1,-1,-2,-2};\n        int dy[]={1,-1,2,-2,2,-2,1,-1};\n        while(k--){\n            vector<vector<double>>v2(n,vector<double>(n,0));\n            for(int i=0;i<n;i++){\n                for(int j=0;j<n;j++){\n                    for(int d=0;d<8;d++){\n                        int x=i+dx[d],y=j+dy[d];\n                        if(x>=0 && x<n && y>=0 && y<n){\n                            v2[x][y]+=v1[i][j]/8.0;\n                        }\n                    }\n                }\n            }\n            v1=v2;\n        }\n        double p=0;\n        for(auto i:v1)\n            for(auto j:i)p+=j;\n        return p;\n    }\n};","compare_result":"1111111111111111111111","title_slug":"knight-probability-in-chessboard"}