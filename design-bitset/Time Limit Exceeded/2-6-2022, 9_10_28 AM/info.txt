{"id":635427362,"lang":"cpp","time":"1Â month","timestamp":1644117928,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/635427362/","is_pending":"Not Pending","title":"Design Bitset","memory":"N/A","code":"class Bitset {\npublic:\n    string v;\n    int c0=0,c1=0,size;\n    Bitset(int sz) {\n        string s(sz,'0');\n        v=s;\n        c0=sz;\n        size=sz;\n        // cout<<s\n    }\n    \n    void fix(int idx) {\n        if(v[idx]!='1'){\n            v[idx]='1';\n            c1++;\n            c0--;\n        }\n    }\n    \n    void unfix(int idx) {\n        if(v[idx]=='1'){\n            c1--;\n            c0++;\n            v[idx]='0';\n        }\n    }\n    \n    void flip() {\n        for(auto&i:v){\n            if(i=='1')i='0';\n            else if(i=='0')i='1';\n        }\n        swap(c0,c1);\n    }\n    \n    bool all() {\n        return c1==size;\n    }\n    \n    bool one() {\n        return c1!=0;\n    }\n    \n    int count() {\n        return c1;\n    }\n    \n    string toString() {\n        return v;\n    }\n};\n\n/**\n * Your Bitset object will be instantiated and called as such:\n * Bitset* obj = new Bitset(size);\n * obj->fix(idx);\n * obj->unfix(idx);\n * obj->flip();\n * bool param_4 = obj->all();\n * bool param_5 = obj->one();\n * int param_6 = obj->count();\n * string param_7 = obj->toString();\n */","compare_result":"111111111111111111111111111111111111111111110000","title_slug":"design-bitset"}