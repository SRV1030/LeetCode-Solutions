{"id":552858860,"lang":"cpp","time":"6Â months","timestamp":1631324760,"status_display":"Accepted","runtime":"423 ms","url":"/submissions/detail/552858860/","is_pending":"Not Pending","title":"Reverse Pairs","memory":"46.8 MB","code":"class Solution {\npublic: vector<int>t;\n    int merge(vector<int>& nums,int l,int m,int h){\n        int c=0,j=m+1;\n        for(int i=l;i<=m;i++){\n            while(j<=h && nums[i]>2*(long)nums[j]) j++;\n            c+=j-(m+1);\n        }\n        int i=l,k=l;\n        j=m+1;\n        while(i<=m && j<=h){\n            if(nums[i]<=nums[j])t[k++]=nums[i++];\n            else t[k++]=nums[j++];\n        }\n        while(i<=m)t[k++]=nums[i++];\n        while(j<=h)t[k++]=nums[j++];\n        for(int i=l;i<=h;i++)nums[i]=t[i];\n        return c;\n    }\n    int mergesort(vector<int>& nums,int l,int h){\n        int inv=0;\n        if(h>l){\n            int m=l+(h-l)/2;\n            inv+=mergesort(nums,l,m);\n            inv+=mergesort(nums,m+1,h);\n            inv+=merge(nums,l,m,h);\n        }\n        return inv;\n    }\n    int reversePairs(vector<int>& nums) {\n        t=vector<int>(nums.size());\n        return mergesort(nums,0,nums.size()-1);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-pairs"}