{"id":546533207,"lang":"cpp","time":"6 months, 2 weeks","timestamp":1630306091,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/546533207/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"14.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        if(!root) return root;\n        if(root==p || root==q) return root;        \n        TreeNode *la=lowestCommonAncestor(root->left, p, q),*ra=lowestCommonAncestor(root->right, p, q);\n        if(la && ra) return root;\n        return la?la:ra;\n        \n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree"}