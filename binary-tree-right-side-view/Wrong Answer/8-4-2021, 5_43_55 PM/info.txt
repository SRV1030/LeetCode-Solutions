{"id":533161607,"lang":"cpp","time":"7 months, 1 week","timestamp":1628078335,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/533161607/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> rightSideView(TreeNode* root) {        \n        if(!root) return {};\n        vector<int> v;\n        queue<TreeNode*> q;\n        q.push(root);\n        while(!q.empty()){\n            int n=q.size();\n            while(n--){\n                TreeNode* x=q.front();\n                q.pop();\n                v.push_back(x->val);\n                if(x->right)q.push(x->right);\n                else if(x->left)q.push(x->left);\n            }\n        }\n        return v;\n    }\n};","compare_result":"11111100111011011111011010011111111111111110111100011111001011011111111111110111111101111111011100110110111011101111100010110010101111101011111001011001111011110111111110101101111011011011101111111111100110010010010","title_slug":"binary-tree-right-side-view"}