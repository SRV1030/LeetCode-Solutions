{"id":549176608,"lang":"cpp","time":"6 months, 1 week","timestamp":1630730881,"status_display":"Accepted","runtime":"271 ms","url":"/submissions/detail/549176608/","is_pending":"Not Pending","title":"Design HashMap","memory":"52.3 MB","code":"class MyHashMap {\n    \nprivate: int mx=1001;\npublic:\n    /** Initialize your data structure here. */\n    struct Node{\n        int key;\n        int val;\n        Node* next, *prev;\n        Node(int k,int v){\n            key=k;\n            val=v;\n            next=prev=NULL;\n        }\n    };\n    Node *mp[1001];\n    MyHashMap() {\n        for (int i=0;i<mx;++i)\n            mp[i] = NULL;\n    }\n    \n    /** value will always be non-negative. */\n    void put(int key, int value) {\n        int k=key%mx;\n        Node*cur=mp[k];\n        if(!cur) mp[k]=new Node(key,value);\n        else{\n            Node*prev=NULL;\n            while(cur!=NULL){\n                if(cur->key==key){\n                    cur->val=value;\n                    return;\n                }\n                prev=cur;\n                cur=cur->next;                \n            }\n            cur=new Node(key,value); \n            cur->next=NULL;\n            cur->prev=prev;\n            prev->next=cur;\n        }\n        \n        \n    }\n    \n    /** Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key */\n    int get(int key) {\n        int k=key%mx;\n        Node*cur=mp[k];\n        if(!cur) return -1;\n        else{\n            while(cur!=NULL){\n                if(cur->key==key) return cur->val;\n                cur=cur->next;                \n            }\n            return -1;\n        }\n    }\n    \n    /** Removes the mapping of the specified value key if this map contains a mapping for the key */\n    void remove(int key) {\n        int k=key%mx;\n        Node*cur=mp[k];\n        while(cur!=NULL){\n            if(cur->key==key){\n                if(!cur->prev && !cur->next){\n                    delete cur;\n                    mp[k]=NULL;\n                    return;\n                } \n                else if (!cur->prev){\n                    mp[k]=cur->next;\n                    mp[k]->prev=NULL;\n                }\n                else if (!cur->next) cur->prev->next=NULL;\n                else{\n                    cur->prev->next=cur->next;\n                    cur->next->prev=cur->prev;\n                }\n                delete cur;\n                return;\n            }\n            cur=cur->next;                \n        }            \n    }\n};\n\n/**\n * Your MyHashMap object will be instantiated and called as such:\n * MyHashMap* obj = new MyHashMap();\n * obj->put(key,value);\n * int param_2 = obj->get(key);\n * obj->remove(key);\n */","compare_result":"111111111111111111111111111111111111","title_slug":"design-hashmap"}