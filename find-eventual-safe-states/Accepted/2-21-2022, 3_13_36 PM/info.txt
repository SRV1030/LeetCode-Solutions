{"id":645900405,"lang":"cpp","time":"2 weeks, 6 days","timestamp":1645435716,"status_display":"Accepted","runtime":"198 ms","url":"/submissions/detail/645900405/","is_pending":"Not Pending","title":"Find Eventual Safe States","memory":"47.3 MB","code":"class Solution {\npublic:\n    bool dfs(vector<vector<int>>& g,int i,vector<int>&vis){\n        if(vis[i]!=0) return vis[i]==2;\n        vis[i]=1;\n        for(auto&j:g[i]){\n            if(vis[j]==1)  return false;\n            if(!vis[j] && !dfs(g,j,vis)) return false;\n        }\n        vis[i]=2;\n        return true;\n    }\n    vector<int> eventualSafeNodes(vector<vector<int>>& g) {\n        vector<int>ans,vis(g.size(),0);\n        for(int i=0;i<g.size();i++)\n            if(dfs(g,i,vis)) ans.emplace_back(i);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-eventual-safe-states"}