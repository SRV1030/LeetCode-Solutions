{"id":542643612,"lang":"cpp","time":"6 months, 3 weeks","timestamp":1629679168,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/542643612/","is_pending":"Not Pending","title":"Design a Stack With Increment Operation","memory":"21 MB","code":"class CustomStack {\npublic:\n    vector<int>v;\n    int s;\n    CustomStack(int maxSize) {\n        s=maxSize;\n    }\n    \n    void push(int x) {\n        if(v.size()==s) return;\n        v.push_back(x);\n    }\n    \n    int pop() {\n        if(v.empty()) return -1;;\n        int x=v.back();\n        v.pop_back();\n        return x;\n    }\n    \n    void increment(int k, int val) {\n        k=k>v.size()?v.size():k;\n        for(int i=0;i<k;i++)v[i]+=val;\n    }\n};\n\n/**\n * Your CustomStack object will be instantiated and called as such:\n * CustomStack* obj = new CustomStack(maxSize);\n * obj->push(x);\n * int param_2 = obj->pop();\n * obj->increment(k,val);\n */","compare_result":"1111111111111111111111111111111111","title_slug":"design-a-stack-with-increment-operation"}