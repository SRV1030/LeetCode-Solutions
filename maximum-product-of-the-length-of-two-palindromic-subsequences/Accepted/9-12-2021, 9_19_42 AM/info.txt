{"id":553430973,"lang":"cpp","time":"6Â months","timestamp":1631417682,"status_display":"Accepted","runtime":"1972 ms","url":"/submissions/detail/553430973/","is_pending":"Not Pending","title":"Maximum Product of the Length of Two Palindromic Subsequences","memory":"253 MB","code":"class Solution {\npublic:\n    int ans=1;\n    unordered_map<string,int>mp;\n    int lps(string s){\n        int n=s.length();\n        if(n==0)return 0;\n        if(mp.count(s))return mp[s];\n        vector<vector<int>>dp(n+1,vector<int>(n+1));\n        string r=s;\n        reverse(s.begin(),s.end());\n        for(int i=1;i<=n;i++){\n            for(int j=1;j<=n;j++){\n                if(s[i-1]==r[j-1]){\n                    dp[i][j]=dp[i-1][j-1]+1;\n                }else{\n                    dp[i][j]=max(dp[i-1][j],dp[i][j-1]);\n                }\n            }\n        }\n        return mp[s]=dp[n][n];\n    }\n    void findpair(string s,string a,string b,int idx){\n        if(idx==s.length()){\n            ans=max(ans,lps(a)*lps(b));\n            return ;\n        }\n        //when including the element in a\n        findpair(s,a+s[idx],b,idx+1);\n        //when including the element in b\n        findpair(s,a,b+s[idx],idx+1);\n    }\n    int maxProduct(string s) {\n        mp.clear();\n        findpair(s,\"\",\"\",0);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-of-the-length-of-two-palindromic-subsequences"}