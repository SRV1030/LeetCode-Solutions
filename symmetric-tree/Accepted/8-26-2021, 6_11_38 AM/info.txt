{"id":544262713,"lang":"cpp","time":"6 months, 2 weeks","timestamp":1629937598,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/544262713/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic: bool f;\n    void checkm(TreeNode* r1,TreeNode* r2){\n        if(!f) return;\n        if(!r1 && !r2) return;\n        if(!r1 || !r2 || r1->val!=r2->val){\n            f=false;\n            return;\n        }\n        checkm(r1->left,r2->right);\n        checkm(r1->right,r2->left);\n    }\n    bool isSymmetric(TreeNode* root) {\n        f=true;\n        if(!root) return f;\n        checkm(root->left,root->right);\n        return f;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}