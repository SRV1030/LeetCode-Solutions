{"id":628626035,"lang":"javascript","time":"1 month, 2 weeks","timestamp":1643248397,"status_display":"Accepted","runtime":"171 ms","url":"/submissions/detail/628626035/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"40.8 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {boolean}\n */\nconst mirrorCheck=(l,r)=>{\n    if(!l && !r) return true;\n    if(l?.val!==r?.val) return false;\n    return mirrorCheck(l.left,r.right) && mirrorCheck(l.right,r.left);\n}\nvar isSymmetric = function(root) {\n    if(!root) return true;\n    return mirrorCheck(root.left,root.right);\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}