{"id":575654708,"lang":"cpp","time":"4 months, 3 weeks","timestamp":1634956043,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/575654708/","is_pending":"Not Pending","title":"Split Linked List in Parts","memory":"8.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    vector<ListNode*> splitListToParts(ListNode* head, int k) {\n        ListNode* cur=head;\n        int c=0;\n        while(cur){\n            cur=cur->next;\n            c++;\n        }\n        vector<ListNode*> ans(k);\n        int i=0;\n        cur=head;\n        while(c>0){\n            int w=ceil((float)c/(float)k);\n            c-=w;\n            k--;\n            ListNode*root=cur;\n            while(w--!=1) root=root->next;\n            ans[i++]=cur;\n            cur=root->next;\n            root->next=NULL;\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111","title_slug":"split-linked-list-in-parts"}