{"id":533465311,"lang":"cpp","time":"7 months, 1 week","timestamp":1628127117,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/533465311/","is_pending":"Not Pending","title":"Minimum Cost Tree From Leaf Values","memory":"9.1 MB","code":"class Solution {\npublic:\n    vector<vector<pair<int,int>>>dp;\n    pair<int,int> util(vector<int>& arr,int i,int j){\n        if(i==j)return {arr[i],0};\n        if(dp[i][j].first!=-1) return dp[i][j];\n        int mns=INT_MAX,mxPe=0;\n        for(int k=i;k<j;k++){\n          auto p1 = util(arr, i,k);\n          auto p2 = util(arr, k+1,j);\n          if(p1.second+p2.second + p1.first*p2.first < mns){\n                mns = p1.second+p2.second + p1.first*p2.first;\n                mxPe = max(p1.first,p2.first);\n            }     \n        }\n        return dp[i][j]={mxPe,mns};\n    }\n    int mctFromLeafValues(vector<int>& arr) {\n        int n=arr.size();\n        dp=vector<vector<pair<int,int>>>(n,vector<pair<int,int>>(n,{-1,-1}));\n        return util(arr,0,n-1).second;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-tree-from-leaf-values"}