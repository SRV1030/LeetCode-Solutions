{"id":657529110,"lang":"cpp","time":"3 days, 1 hour","timestamp":1646961675,"status_display":"Accepted","runtime":"34 ms","url":"/submissions/detail/657529110/","is_pending":"Not Pending","title":"Minimum Cost Tree From Leaf Values","memory":"9 MB","code":"class Solution {\npublic:\n    int find_max(int l,int h, vector <int>&ar){\n        int maxi=0;\n        for(int i=l;i<=h;i++){\n            maxi=max(ar[i],maxi);\n        }\n        return maxi;\n    }\n    int fun(int l,int h, vector <int>&ar,vector <vector <int>> &dp){\n        if(l==h)\n            return dp[l][h]=0;\n        if(h-l==1)\n            return dp[l][h]=ar[l]*ar[h];\n        int ans=INT_MAX,a,b,temp;\n        if(dp[l][h]!=-1)\n            return dp[l][h];\n        for(int i=l;i<h;i++){\n            a=find_max(l,i,ar);\n            b=find_max(i+1,h,ar);\n            temp=fun(l,i,ar,dp)+fun(i+1,h,ar,dp);\n            ans=min(ans,(a*b)+temp);\n        }\n        return dp[l][h]=ans;\n    }\n    int mctFromLeafValues(vector<int>& ar) {\n        int n=ar.size();\n        vector <vector <int>> dp(n+1, vector <int>(n+1,-1));\n        return fun(0,n-1,ar,dp);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-tree-from-leaf-values"}